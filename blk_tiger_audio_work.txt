CF 04                               : CF xx Set FM operators or "slots" to use on this track, top nibble of xx is a bitmask: 04 = op 3
00 05
E0 FF                               : E0 xy Set hardware LFO usage/depth. If the bottom nibble is 08-0F, the LFO is enabled, at depth y - 8.
00 22
5C 00
41 3C
00 62

D7 00                               : D7 xx  Set hardware LFO frequency to xx.
8F 00
AF FF
CF 00                               : CF xx Set FM operators or "slots" to use on this track, top nibble of xx is a bitmask: 00 = unset
00 02
E0 FF
00 20 00
00 40 00
00 60 00
00 80 00
A0 00
C0 00 00                            : C0 xx yy
08
E0 FF
00 24 35
00 41 68
00 62 3B
00 8F 00
AF 00
CF 00
08 02
00 0E
E0 FF
00 21 C5
00 42 1B
00 61 0E
00 8F 00
AF 00
CF 00 1C






C8 xx yyzz


C8 00 17
E0 FF 00
20 25 00
40 3A 00
60 3B 00
8F 00
AF 00
CF
00 00 2A
E0 FF 00
20 25 00
40 3A 00
60 3B 00
8A
FA AA
FA CA
FA 1C






        ram:02dd dd 72 15        LD         (IX+0x15),D
        ram:02e0 dd 73 16        LD         (IX+0x16),E
        ram:02e3 dd 72 17        LD         (IX+0x17),D
        ram:02e6 dd 73 18        LD         (IX+0x18),E
        ram:02e9 dd 77 1f        LD         (IX+0x1f),A


bp = b47

IX+0x7      = SOMETHING COMPUTED FROM E0-FF cmd
0x8         = (bits 3-5) of 2nd byte
(15/16)     = PTR
(17/18)     = PREV PTR
(19)        = (counter of some type?)
(1a)        = CURRENT BYTE
(1b)        = NEXT BYTE

(1f)        = CURR COMMAND(?)


BLOOP:

CF:
  CMD: BIT 7 = CMD
       BIT 6 = YM1 (0) / YM2 (1)

  (BITS 0-3) -> offset
  MAYBE_CURRENT_YM2_CMD = CF

04:
  OFFSET: (A / 4) & 7 -> CMD (Update bookmarks load next byte)

00:
  OFFSET: (A / 4) & 7 -> CMD (Save current cmd in x13);
                         load next byte, put next byte into (x14)
                         Check to see if next cmd & E0 is not zero
                         Keep loading bytes like this until you get zero.

05:

E0:

FF: (bits 3-5)  YM2 => 6, 0, 7, 38

00: => 0x12



dmpsoft@s17.xrea.com





CF 04 00 05 E0 FF 00 22 5C 00 41 3C 00 62 D7 00
8F 00 AF FF CF 00 00 02 E0 FF 00 20 00 00 40 00
00 60 00 00 80 00 A0 00 C0 00 00 08 E0 FF 00 24
35 00 41 68 00 62 3B 00 8F 00 AF 00 CF 00 08 02
00 0E E0 FF 00 21 C5 00 42 1B 00 61 0E 00 8F 00
AF 00 CF 00 1C



00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00
06 00 07 38 00 5C 01 02 02 3C 03 01 04 D7 05 02 08 0F 09 0F 0A 0F 09 0E
06 00 07 38 00 00 01 00 02 00 03 00 04 00 05 00 08 00 09 00 0A 00
06 00 07 38 00 35 01 04 02 68 03 01 04 3B 05 02 08 0F 09 0F 0A 0F
06 00 07 38 00 5C 01 02 02 3C 03 01 04 D7 05 02 08 0F 09 0F 0A 0F 09 0E
06 00 07 38 00 00 01 00 02 00 03 00 04 00 05 00 08 00 09 00 0A 00
06 00 07 38 00 35 01 04 02 68 03 01 04 3B 05 02 08 0F 09 0F 0A 0F
06 00 07 38 00 C5 01 01 02 1B 03 02 04 0E 05 01 08 0F 09 0F 0A 0F
00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00


SET SSG TONE PERIOD A (FINE): 00
SET SSG TONE PERIOD A (COARSE): 00
SET SSG TONE PERIOD B (FINE): 00
SET SSG TONE PERIOD B (COARSE): 00
SET SSG TONE PERIOD C (FINE): 00
SET SSG TONE PERIOD C (COARSE): 00

SET SSG NOISE PERIOD: 00
NOISE DISABLE (WRITE A/B) FOR A/B/C (07 F8)
SET SSG TONE PERIOD A (FINE): 5C
SET SSG TONE PERIOD A (COARSE): 02
SET SSG TONE PERIOD B (FINE): 3C
SET SSG TONE PERIOD B (COARSE): 01
SET SSG TONE PERIOD C (FINE): D7
SET SSG TONE PERIOD C (COARSE): 02
AMPLITUDE A (FIXED): 0F
AMPLITUDE B (FIXED): 0F
AMPLITUDE C (FIXED): 0F
AMPLITUDE B (FIXED): 0E

SET SSG NOISE PERIOD: 00
NOISE DISABLE (READ A/B) FOR A/B/C (07 38)
SET SSG TONE PERIOD A (FINE): 00
SET SSG TONE PERIOD A (COARSE): 00
SET SSG TONE PERIOD B (FINE): 00
SET SSG TONE PERIOD B (COARSE): 00
SET SSG TONE PERIOD C (FINE): 00
SET SSG TONE PERIOD C (COARSE): 00
AMPLITUDE A (FIXED): 00
AMPLITUDE B (FIXED): 00
AMPLITUDE C (FIXED): 00

SET SSG NOISE PERIOD: 00
NOISE DISABLE (READ A/B) FOR A/B/C (07 38)
SET SSG TONE PERIOD A (FINE): 35
SET SSG TONE PERIOD A (COARSE): 04
SET SSG TONE PERIOD B (FINE): 68
SET SSG TONE PERIOD B (COARSE): 01
SET SSG TONE PERIOD C (FINE): 3B
SET SSG TONE PERIOD C (COARSE): 02
AMPLITUDE A (FIXED): 0F
AMPLITUDE B (FIXED): 0F
AMPLITUDE C (FIXED): 0F

SET SSG NOISE PERIOD: 00
NOISE DISABLE (READ A/B) FOR A/B/C (07 38)
SET SSG TONE PERIOD A (FINE): 5C
SET SSG TONE PERIOD A (COARSE): 02
SET SSG TONE PERIOD B (FINE): 3C
SET SSG TONE PERIOD B (COARSE): 01
SET SSG TONE PERIOD C (FINE): D7
SET SSG TONE PERIOD C (COARSE): 02
AMPLITUDE A (FIXED): 0F
AMPLITUDE B (FIXED): 0F
AMPLITUDE C (FIXED): 0F
AMPLITUDE B (FIXED): 0E

SET SSG NOISE PERIOD: 00
NOISE DISABLE (READ A/B) FOR A/B/C (07 38)
SET SSG TONE PERIOD A (FINE): 00
SET SSG TONE PERIOD A (COARSE): 00
SET SSG TONE PERIOD B (FINE): 00
SET SSG TONE PERIOD B (COARSE): 00
SET SSG TONE PERIOD C (FINE): 00
SET SSG TONE PERIOD C (COARSE): 00
AMPLITUDE A (FIXED): 00
AMPLITUDE B (FIXED): 00
AMPLITUDE C (FIXED): 00

SET SSG NOISE PERIOD: 00
NOISE DISABLE (READ A/B) FOR A/B/C (07 38)
SET SSG TONE PERIOD A (FINE): 35
SET SSG TONE PERIOD A (COARSE): 04
SET SSG TONE PERIOD B (FINE): 68
SET SSG TONE PERIOD B (COARSE): 01
SET SSG TONE PERIOD C (FINE): 3B
SET SSG TONE PERIOD C (COARSE): 02
AMPLITUDE A (FIXED): 0F
AMPLITUDE B (FIXED): 0F
AMPLITUDE C (FIXED): 0F

SET SSG NOISE PERIOD: 00
NOISE DISABLE (READ A/B) FOR A/B/C (07 38)
SET SSG TONE PERIOD A (FINE): C5
SET SSG TONE PERIOD A (COARSE): 01
SET SSG TONE PERIOD B (FINE): 1B
SET SSG TONE PERIOD B (COARSE): 02
SET SSG TONE PERIOD C (FINE): 0E
SET SSG TONE PERIOD C (COARSE): 01
AMPLITUDE A (FIXED): 0F
AMPLITUDE B (FIXED): 0F
AMPLITUDE C (FIXED): 0F

SET SSG TONE PERIOD A (FINE): 00
SET SSG TONE PERIOD A (COARSE): 00
SET SSG TONE PERIOD B (FINE): 00
SET SSG TONE PERIOD B (COARSE): 00
SET SSG TONE PERIOD C (FINE): 00
SET SSG TONE PERIOD C (COARSE): 00


        AY_AFINE    = 0x00,
        AY_ACOARSE  = 0x01,
        AY_BFINE    = 0x02,
        AY_BCOARSE  = 0x03,
        AY_CFINE    = 0x04,
        AY_CCOARSE  = 0x05,
        AY_NOISEPER = 0x06,
        AY_ENABLE   = 0x07,
        AY_AVOL     = 0x08,
        AY_BVOL     = 0x09,
        AY_CVOL     = 0x0a,
        AY_EAFINE   = 0x0b,
        AY_EACOARSE = 0x0c,
        AY_EASHAPE  = 0x0d,
        AY_PORTA    = 0x0e,
        AY_PORTB    = 0x0f,
        AY_EBFINE   = 0x10,
        AY_EBCOARSE = 0x11,
        AY_ECFINE   = 0x12,
        AY_ECCOARSE = 0x13,
        AY_EBSHAPE  = 0x14,
        AY_ECSHAPE  = 0x15,
        AY_ADUTY    = 0x16,
        AY_BDUTY    = 0x17,
        AY_CDUTY    = 0x18,
        AY_NOISEAND = 0x19,
        AY_NOISEOR  = 0x1a,
        AY_TEST     = 0x1f

C:\Users\Public\msys64\usr\bin\make.exe vs2017 PYTHON_EXECUTABLE=c:/Users/Public/msys64/mingw64/bin/python.exe
PATH=C:\Users\Public\msys64\usr\bin make vs2019

PYTHON_EXECUTABLE=c:/msys64/mingw64/bin/python.exe

bp 218
wp E000,2,w,1,{tracelog "YM1 %04X: %02X\n",wpaddr,wpdata; g}
wp E002,2,w,1,{tracelog "YM2 %04X: %02X\n",wpaddr,wpdata; g}
bp daf,1=1,{tracelog "BT SFX COMMAND %02X\n",wpdata; g}
traceover blktiger.tr,1
traceover off

wp 5448,CB,r,1,{tracelog "BT COMMAND AT %04X (PC=%04X) %02X\n",wpaddr,pc,wpdata; g}


wp f7f,55,r,1,{tracelog "BT COMMAND AT %04X (PC=%04X) %02X\n",wpaddr,pc,wpdata; g}
wp fd4,2a,r,1,{tracelog "BT COMMAND AT %04X (PC=%04X) %02X\n",wpaddr,pc,wpdata; g}


ymfm_opn.h:
YM2203 (OPN) [1984: NEC PC-88, PC-98, NEC PC-6001mkII SR, PC-6601 SR]

    static constexpr uint32_t OUTPUTS = 1;
    static constexpr uint32_t CHANNELS = 3;
    static constexpr uint32_t ALL_CHANNELS = (1 << CHANNELS) - 1; //5
    static constexpr uint32_t OPERATORS = CHANNELS * 4; //12
    static constexpr uint32_t WAVEFORMS = 1;
    static constexpr uint32_t REGISTERS = 0x100;
    static constexpr uint32_t REG_MODE = 0x27;
    static constexpr uint32_t DEFAULT_PRESCALE = 6;
    static constexpr uint32_t EG_CLOCK_DIVIDER = 3;
    static constexpr bool EG_HAS_SSG = true;
    static constexpr bool MODULATOR_DELAY = false;
    static constexpr uint32_t CSM_TRIGGER_MASK = 1 << 2; //4
    static constexpr uint8_t STATUS_TIMERA = 0x01;
    static constexpr uint8_t STATUS_TIMERB = 0x02;
    static constexpr uint8_t STATUS_BUSY = 0x80;
    static constexpr uint8_t STATUS_IRQ = 0;

    // system-wide registers
    test                        // 0x21 (ALL)
    timer_a_value               // 0x24 (ALL) | 0x25 BITS 0/1
    timer_b_value               // 0x26 (ALL)
    csm                         // 0x27 BITS  (010.....)
    multi_freq                  // 0x27 BITS !(000.....)
    reset_timer_b               // 0x27 BIT  5
    reset_timer_a               // 0x27 BIT  4
    enable_timer_b              // 0x27 BIT  3
    enable_timer_a              // 0x27 BIT  2
    load_timer_b                // 0x27 BIT  1
    load_timer_a                // 0x27 BIT  0
    multi_block_freq + num      // (0xAC + num) BITS 0/1/2/3/4/5 << 8 | (0xA8 + num) (ALL)

    // per-channel registers
    ch_block_freq + choffs      // (0xA4 + choffs) BITS 0/1/2/3/4/5  | (0xA0 + choffs) BITS (ALL)
    ch_feedback  + choffs       // 0xB_ BITS 3/4/5
    ch_algorithm  + choffs      // 0xB_ BITS 0/1/2
    ch_output_any               { return 1; }
    ch_output_0                 { return 1; }

    // per-operator registers
    op_detune + opoffs          // 0x3_ BITS 4/5/6
    op_multiple + opoffs        // 0x3_ BITS 0/1/2/3
    op_total_level + opoffs     // 0x4_ BITS 0/1/2/3/4/5/6
    op_ksr + opoffs             // 0x5_ BITS 6/7/8
    op_attack_rate + opoffs     // 0x5_ BITS 0/1/2/3/4/5
    op_decay_rate + opoffs      // 0x6_ BITS 0/1/2/3/4/5
    op_sustain_rate  + opoffs   // 0x7_ BITS 0/1/2/3/4/5
    op_sustain_level + opoffs   // 0x8_ BITS 4/5/6/7
    op_release_rate  + opoffs   // 0x8_ BITS 0/1/2/3
    op_ssg_eg_enable + opoffs   // 0x9_ BIT  3
    op_ssg_eg_mode   + opoffs   // 0x9_ BITS 0/1/2


YM2203 REGISTER MAP:

    SSG:
0x00
0x01
0x02
0x03
0x04
0x05
0x06
0x07
0x08
0x09
0x0a
0x0b
0x0c
0x0d
0x0e
0x0f

    FM:
0x10
0x11
0x12
0x13
0x14
0x15
0x16
0x17
0x18
0x19
0x1a
0x1b
0x1c
0x1d
0x1e
0x1f
0x20
0x21
0x22
0x23
0x24
0x25
0x26
0x27        SET MODE
0x28        KEY ON (WRITE) (DATA & 0x3) = CHANNEL. IF 3, return false. OPMASK = (DATA & F0). Write channel KEY ON/OFF if true.
0x29
0x2a
0x2b
0x2c
0x2d
0x2e
0x2f
0x30
0x31
0x32
0x33
0x34
0x35
0x36
0x37
0x38
0x39
0x3a
0x3b
0x3c
0x3d
0x3e
0x3f
0x40
0x41
0x42
0x43
0x44
0x45
0x46
0x47
0x48
0x49
0x4a
0x4b
0x4c
0x4d
0x4e
0x4f
0x50
0x51
0x52
0x53
0x54
0x55
0x56
0x57
0x58
0x59
0x5a
0x5b
0x5c
0x5d
0x5e
0x5f
0x60
0x61
0x62
0x63
0x64
0x65
0x66
0x67
0x68
0x69
0x6a
0x6b
0x6c
0x6d
0x6e
0x6f
0x70
0x71
0x72
0x73
0x74
0x75
0x76
0x77
0x78
0x79
0x7a
0x7b
0x7c
0x7d
0x7e
0x7f
0x80
0x81
0x82
0x83
0x84
0x85
0x86
0x87
0x88
0x89
0x8a
0x8b
0x8c
0x8d
0x8e
0x8f
0x90
0x91
0x92
0x93
0x94
0x95
0x96
0x97
0x98
0x99
0x9a
0x9b
0x9c
0x9d
0x9e
0x9f
0xa0        => A4 = (LATCHED DATA B8) & 0x3F
0xa1        => A5 = (LATCHED DATA B9) & 0x3F
0xa2        => A6 = (LATCHED DATA BA) & 0x3F
0xa3        => A7 = (LATCHED DATA BB) & 0x3F
0xa4        LATCH: B8 = data | 0x80
0xa5        LATCH: B9 = data | 0x80
0xa6        LATCH: BA = data | 0x80
0xa7        LATCH: BB = data | 0x80
0xa8        => AC = (LATCHED DATA BC) & 0x3F
0xa9        => AD = (LATCHED DATA BD) & 0x3F
0xaa        => AE = (LATCHED DATA BE) & 0x3F
0xab        => AF = (LATCHED DATA BF) & 0x3F
0xac        LATCH: BC = data | 0x80
0xad        LATCH: BD = data | 0x80
0xae        LATCH: BE = data | 0x80
0xaf        LATCH: BF = data | 0x80
0xb0
0xb1
0xb2
0xb3
0xb4
0xb5
0xb6
0xb7

0xb8        (TEMPORARY USAGE ONLY)
0xb9        (TEMPORARY USAGE ONLY)
0xba        (TEMPORARY USAGE ONLY)
0xbb        (TEMPORARY USAGE ONLY)
0xbc        (TEMPORARY USAGE ONLY)
0xbd        (TEMPORARY USAGE ONLY)
0xbe        (TEMPORARY USAGE ONLY)
0xbf        (TEMPORARY USAGE ONLY)

0xc0
0xc1
0xc2
0xc3
0xc4
0xc5
0xc6
0xc7
0xc8
0xc9
0xca
0xcb
0xcc
0xcd
0xce
0xcf
0xd0
0xd1
0xd2
0xd3
0xd4
0xd5
0xd6
0xd7
0xd8
0xd9
0xda
0xdb
0xdc
0xdd
0xde
0xdf
0xe0
0xe1
0xe2
0xe3
0xe4
0xe5
0xe6
0xe7
0xe8
0xe9
0xea
0xeb
0xec
0xed
0xee
0xef
0xf0
0xf1
0xf2
0xf3
0xf4
0xf5
0xf6
0xf7
0xf8
0xf9
0xfa
0xfb
0xfc
0xfd
0xfe
0xff

    RegisterType m_regs;             // register accessor

    std::unique_ptr<fm_channel<RegisterType>> m_channel[CHANNELS]; // channel pointers
    std::unique_ptr<fm_operator<RegisterType>> m_operator[OPERATORS]; // operator pointers

    fm_engine_base<RegisterType>::write(uint16_t regnum, uint8_t data)

    if (m_regs.write(regnum, data, keyon_channel, keyon_opmask)) // if 0x28 was index and keyon_channel <= 2
    {
        // handle writes to the keyon register(s)
        if (keyon_channel < CHANNELS)
        {
            // normal channel on/off
            m_channel[keyon_channel]->keyonoff(keyon_opmask, KEYON_NORMAL, keyon_channel);

            //
        }
    }

    (0xA0) 10100000 -> 0xb8 | 00000000 | 00000000 = latchindex = 0xB8 => (if m_regdata[0xB8] & 80) { m_regdata[0xA4] = m_regdata[0xB8] & 0x3F; m_regdata[0xB8] = 0;  }
    (0xA1) 10100001 -> 0xb8 | 00000000 | 00000001 = latchindex = 0xB9 => (if m_regdata[0xB9] & 80) { m_regdata[0xA5] = m_regdata[0xB9] & 0x3F; m_regdata[0xB9] = 0;  }
    (0xA2) 10100011 -> 0xb8 | 00000000 | 00000010 = latchindex = 0xBA => (if m_regdata[0xBA] & 80) { m_regdata[0xA6] = m_regdata[0xBA] & 0x3F; m_regdata[0xBA] = 0;  }
    (0xA3) 10100011 -> 0xb8 | 00000000 | 00000011 = latchindex = 0xBB => (if m_regdata[0xBB] & 80) { m_regdata[0xA7] = m_regdata[0xBB] & 0x3F; m_regdata[0xBB] = 0;  }
    (0xA4) 10100100 -> 0xb8 | 00000000 | 00000000 = latchindex = 0xB8 => m_regdata[0xB8] = 80 | data;
    (0xA5) 10100101 -> 0xb8 | 00000000 | 00000001 = latchindex = 0xB9 => m_regdata[0xB9] = 80 | data;
    (0xA6) 10100110 -> 0xb8 | 00000000 | 00000010 = latchindex = 0xBA => m_regdata[0xBA] = 80 | data;
    (0xA7) 10100111 -> 0xb8 | 00000000 | 00000011 = latchindex = 0xBB => m_regdata[0xBB] = 80 | data;
    (0xA8) 10101000 -> 0xb8 | 00000100 | 00000000 = latchindex = 0xBC => (if m_regdata[0xBC] & 80) { m_regdata[0xAC] = m_regdata[0xBC] & 0x3F; m_regdata[0xBC] = 0;  }
    (0xA9) 10101001 -> 0xb8 | 00000100 | 00000001 = latchindex = 0xBD => (if m_regdata[0xBD] & 80) { m_regdata[0xAD] = m_regdata[0xBD] & 0x3F; m_regdata[0xBD] = 0;  }
    (0xAA) 10101010 -> 0xb8 | 00000100 | 00000010 = latchindex = 0xBE => (if m_regdata[0xBE] & 80) { m_regdata[0xAE] = m_regdata[0xBE] & 0x3F; m_regdata[0xBE] = 0;  }
    (0xAB) 10101011 -> 0xb8 | 00000100 | 00000011 = latchindex = 0xBF => (if m_regdata[0xBF] & 80) { m_regdata[0xAF] = m_regdata[0xBF] & 0x3F; m_regdata[0xBF] = 0;  }
    (0xAC) 10101100 -> 0xb8 | 00000100 | 00000000 = latchindex = 0xBC => m_regdata[0xBC] = 80 | data;
    (0xAD) 10101101 -> 0xb8 | 00000100 | 00000001 = latchindex = 0xBD => m_regdata[0xBD] = 80 | data;
    (0xAE) 10101110 -> 0xb8 | 00000100 | 00000010 = latchindex = 0xBE => m_regdata[0xBF] = 80 | data;
    (0xAF) 10101111 -> 0xb8 | 00000100 | 00000011 = latchindex = 0xBF => m_regdata[0xBF] = 80 | data;


    00000100

template<bool IsOpnA>
bool opn_registers_base<IsOpnA>::write(uint16_t index, uint8_t data, uint32_t &channel, uint32_t &opmask)
{
    assert(index < REGISTERS);

    // writes in the 0xa0-af region are handled as latched pairs
    // borrow unused registers 0xb8-bf as temporary holding locations
    if ((index & 0xf0) == 0xa0)
    {
        uint32_t latchindex = 0xb8 | (bitfield(index, 3) << 2) | bitfield(index, 0, 2);

        // writes to the upper half just latch (only low 6 bits matter)
        if (bitfield(index, 2))
        {
            m_regdata[latchindex] = data | 0x80;
        }

        // writes to the lower half only commit if the latch is there
        else if (bitfield(m_regdata[latchindex], 7))
        {
            m_regdata[index | 4] = m_regdata[latchindex] & 0x3f;
            m_regdata[latchindex] = 0;
        }
    }

    // everything else is normal
    m_regdata[index] = data;

    // handle writes to the key on index
    if (index == 0x28) // 0,1,2 => return true and channel = set
    {
        channel = bitfield(data, 0, 2);
        if (channel == 3)
            return false;
        opmask = bitfield(data, 4, 4); => upper 4 bits of data is OPMASK
        return true;
    }

    return false;
}


void opn_registers_base<false>::operator_map(operator_mapping &dest) const
{
    // Note that the channel index order is 0,2,1,3, so we bitswap the index.
    //
    // This is because the order in the map is:
    //    carrier 1, carrier 2, modulator 1, modulator 2
    //
    // But when wiring up the connections, the more natural order is:
    //    carrier 1, modulator 1, carrier 2, modulator 2
    static const operator_mapping s_fixed_map =
    { {
        operator_list(  0,  6,  3,  9 ),  // Channel 0 operators
        operator_list(  1,  7,  4, 10 ),  // Channel 1 operators
        operator_list(  2,  8,  5, 11 ),  // Channel 2 operators
    } };
    dest = s_fixed_map;
}




template<bool IsOpnA>
std::string opn_registers_base<IsOpnA>::log_keyon(uint32_t choffs, uint32_t opoffs)
{
    uint32_t chnum = (choffs & 3) + 3 * bitfield(choffs, 8);
    uint32_t opnum = (opoffs & 15) - ((opoffs & 15) / 4) + 12 * bitfield(opoffs, 8);

    uint32_t block_freq = ch_block_freq(choffs);
    if (multi_freq() && choffs == 2)
    {
        if (opoffs == 2)
            block_freq = multi_block_freq(1);
        else if (opoffs == 10)
            block_freq = multi_block_freq(2);
        else if (opoffs == 6)
            block_freq = multi_block_freq(0);
    }

    char buffer[256];
    char *end = &buffer[0];

    end += sprintf(end, "%u.%02u freq=%04X dt=%u fb=%u alg=%X mul=%X tl=%02X ksr=%u adsr=%02X/%02X/%02X/%X sl=%X",
        chnum, opnum,
        block_freq,
        op_detune(opoffs),
        ch_feedback(choffs),
        ch_algorithm(choffs),
        op_multiple(opoffs),
        op_total_level(opoffs),
        op_ksr(opoffs),
        op_attack_rate(opoffs),
        op_decay_rate(opoffs),
        op_sustain_rate(opoffs),
        op_release_rate(opoffs),
        op_sustain_level(opoffs));

    if (OUTPUTS > 1)
        end += sprintf(end, " out=%c%c",
            ch_output_0(choffs) ? 'L' : '-',
            ch_output_1(choffs) ? 'R' : '-');
    if (op_ssg_eg_enable(opoffs))
        end += sprintf(end, " ssg=%X", op_ssg_eg_mode(opoffs));
    bool am = (lfo_enable() && op_lfo_am_enable(opoffs) && ch_lfo_am_sens(choffs) != 0);
    if (am)
        end += sprintf(end, " am=%u", ch_lfo_am_sens(choffs));
    bool pm = (lfo_enable() && ch_lfo_pm_sens(choffs) != 0);
    if (pm)
        end += sprintf(end, " pm=%u", ch_lfo_pm_sens(choffs));
    if (am || pm)
        end += sprintf(end, " lfo=%02X", lfo_rate());
    if (multi_freq() && choffs == 2)
        end += sprintf(end, " multi=1");

    return buffer;
}


    fm_engine_base<opn_registers> m_fm;                     // core FM engine
    ssg_engine m_ssg;                   // SSG engine


void ym2203::write_data(uint8_t data)
{
    if (m_address < 0x10)
    {
        // 00-0F: write to SSG
        m_ssg.write(m_address & 0x0f, data); // void ssg_engine::write(uint32_t regnum, uint8_t data)
    }
    else
    {
        // 10-FF: write to FM
        m_fm.write(m_address, data); //fm_engine_base<RegisterType>::write(uint16_t regnum, uint8_t data)
    }

    // mark busy for a bit
    m_fm.intf().ymfm_set_busy_end(32 * m_fm.clock_prescale());
}

void ym2203::write(uint32_t offset, uint8_t data)
{
    switch (offset & 1)
    {
        case 0: // address port
            write_address(data);
            break;

        case 1: // data port
            write_data(data);
            break;
    }
}


SSG
    static constexpr uint32_t OUTPUTS = 3;
    static constexpr uint32_t CHANNELS = 3;
    static constexpr uint32_t REGISTERS = 0x10;
    static constexpr uint32_t ALL_CHANNELS = (1 << CHANNELS) - 1;
    uint32_t noise_period() const                       { return bitfield(m_regdata[0x06], 0, 5); }
    uint32_t io_b_out() const                           { return bitfield(m_regdata[0x07], 7); }
    uint32_t io_a_out() const                           { return bitfield(m_regdata[0x07], 6); }
    uint32_t envelope_period() const                    { return m_regdata[0x0b] | (m_regdata[0x0c] << 8); }
    uint32_t envelope_continue() const                  { return bitfield(m_regdata[0x0d], 3); }
    uint32_t envelope_attack() const                    { return bitfield(m_regdata[0x0d], 2); }
    uint32_t envelope_alternate() const                 { return bitfield(m_regdata[0x0d], 1); }
    uint32_t envelope_hold() const                      { return bitfield(m_regdata[0x0d], 0); }
    uint32_t io_a_data() const                          { return m_regdata[0x0e]; }
    uint32_t io_b_data() const                          { return m_regdata[0x0f]; }

    // per-channel registers
    uint32_t ch_noise_enable(uint32_t choffs) const     { return bitfield(~m_regdata[0x07], 3 + choffs); }
    uint32_t ch_tone_enable(uint32_t choffs) const      { return bitfield(~m_regdata[0x07], 0 + choffs); }
    uint32_t ch_tone_period(uint32_t choffs) const      { return m_regdata[0x00 + 2 * choffs] | (bitfield(m_regdata[0x01 + 2 * choffs], 0, 4) << 8); }
    uint32_t ch_envelope_enable(uint32_t choffs) const  { return bitfield(m_regdata[0x08 + choffs], 4); }
    uint32_t ch_amplitude(uint32_t choffs) const        { return bitfield(m_regdata[0x08 + choffs], 0, 4); }
uint8_t m_regdata[REGISTERS];         // register data


class ym2203_device : public ymfm_ssg_device_base<ymfm::ym2203>
{
    using parent = ymfm_ssg_device_base<ymfm::ym2203>;

public:
    // constructor
    ym2203_device(const machine_config &mconfig, const char *tag, device_t *owner, uint32_t clock);

    // configuration helpers, handled by the interface
    auto port_a_read_callback() { return io_read_handler(0); }
    auto port_b_read_callback() { return io_read_handler(1); }
    auto port_a_write_callback() { return io_write_handler(0); }
    auto port_b_write_callback() { return io_write_handler(1); }

    // data register read
    u8 data_r() { return update_streams().read_data(); }

protected:
    // device-level overrides
    virtual void device_start() override;
};


    // system-wide register defaults
    uint32_t status_mask() const                     { return 0; } // OPL only
    uint32_t irq_reset() const                       { return 0; } // OPL only
    uint32_t noise_enable() const                    { return 0; } // OPM only
    uint32_t rhythm_enable() const                   { return 0; } // OPL only

    // per-operator register defaults
    uint32_t op_ssg_eg_enable(uint32_t opoffs) const { return 0; } // OPN(A) only
    uint32_t op_ssg_eg_mode(uint32_t opoffs) const   { return 0; } // OPN(A) only




FUN_ram_07c5
FUN_ram_07f9
FUN_ram_0800

FUN_ram_0828

static BYTE kssipl [] = {
//   0    1    2    3    4    5    6    7    8    9    a    b    c    d    e    f
  0xd7,0xd3,0xa0,0xf5,0x7b,0xd3,0xa1,0xf1,0xc9,0xd3,0xa0,0xdb,0xa2,0xc9,0xff,0xff,  /* 0000 */
  0xed,0x56,0x31,0x80,0xf3,0xf3,0xdb,0x00,0xcd,0x00,0x00,0xfb,0xdb,0x01,0x18,0xfb,  /* 0010 */
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,  /* 0020 */
  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xf3,0xcd,0x00,0x00,0xfb,0xc9,
};



"BLOOP":


0F7F (PC=0219) CF               => YM2 E002: 00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00
0F80 (PC=0DAF) 04

0F81 (PC=0DAF) 00 05 E0 FF      => YM2 E002: 06 00 07 38
0F85 (PC=0DAF) 00 22 5C         => YM2 E002: 00 5C 01 02
0F88 (PC=0DAF) 00 41 3C         => YM2 E002: 02 3C 03 01
0F8B (PC=0DAF) 00 62 D7         => YM2 E002: 04 D7 05 02
0F8E (PC=0DAF) 00 8F            => YM2 E002: 08 0F
0F90 (PC=0DAF) 00 AF            => YM2 E002: 09 0F
0F92 (PC=0DAF) FF CF            => YM2 E002: 0A 0F
0F94 (PC=0DAF) 00
0F95 (PC=0DAF) 00 02 E0 FF      => YM2 E002: 06 00 07 38
0F99 (PC=0DAF) 00 20 00         => YM2 E002: 00 00 01 00
0F9C (PC=0DAF) 00 40 00         => YM2 E002: 02 00 03 00
0F9F (PC=0DAF) 00 60 00         => YM2 E002: 04 00 05 00
0FA2 (PC=0DAF) 00 80            => YM2 E002: 08 00
0FA4 (PC=0DAF) 00 A0            => YM2 E002: 09 00
0FA6 (PC=0DAF) 00 C0            => YM2 E002: 0A 00
0FA8 (PC=0DAF) 00
0FA9 (PC=0DAF) 00 08 E0 FF      => YM2 E002: 06 00 07 38
0FAD (PC=0DAF) 00 24 35         => YM2 E002: 00 35 01 04
0FB0 (PC=0DAF) 00 41 68         => YM2 E002: 02 68 03 01
0FB3 (PC=0DAF) 00 62 3B         => YM2 E002: 04 3B 05 02
0FB6 (PC=0DAF) 00 8F            => YM2 E002: 08 0F
0FB8 (PC=0DAF) 00 AF            => YM2 E002: 09 0F
0FBA (PC=0DAF) 00 CF            => YM2 E002: 0A 0F
0FBC (PC=0DAF) 00

0FBD (PC=0DAF) 08 02

0F81 (PC=0DAF) 00 05 E0 FF      => YM2 E002: 06 00 07 38
0F85 (PC=0DAF) 00 22 5C         => YM2 E002: 00 5C 01 02
0F88 (PC=0DAF) 00 41 3C         => YM2 E002: 02 3C 03 01
0F8B (PC=0DAF) 00 62 D7         => YM2 E002: 04 D7 05 02
0F8E (PC=0DAF) 00 8F            => YM2 E002: 08 0F
0F90 (PC=0DAF) 00 AF            => YM2 E002: 09 0F
0F92 (PC=0DAF) FF CF            => YM2 E002: 0A 0F
0F94 (PC=0DAF) 00
0F95 (PC=0DAF) 00 02 E0 FF      => YM2 E002: 06 00 07 38
0F99 (PC=0DAF) 00 20 00         => YM2 E002: 00 00 01 00
0F9C (PC=0DAF) 00 40 00         => YM2 E002: 02 00 03 00
0F9F (PC=0DAF) 00 60 00         => YM2 E002: 04 00 05 00
0FA2 (PC=0DAF) 00 80            => YM2 E002: 08 00
0FA4 (PC=0DAF) 00 A0            => YM2 E002: 09 00
0FA6 (PC=0DAF) 00 C0            => YM2 E002: 0A 00
0FA8 (PC=0DAF) 00
0FA9 (PC=0DAF) 00 08 E0 FF      => YM2 E002: 06 00 07 38
0FAD (PC=0DAF) 00 24 35         => YM2 E002: 00 35 01 04
0FB0 (PC=0DAF) 00 41 68         => YM2 E002: 02 68 03 01
0FB3 (PC=0DAF) 00 62 3B         => YM2 E002: 04 3B 05 02
0FB6 (PC=0DAF) 00 8F            => YM2 E002: 08 0F
0FB8 (PC=0DAF) 00 AF            => YM2 E002: 09 0F
0FBA (PC=0DAF) 00 CF            => YM2 E002: 0A 0F
0FBC (PC=0DAF) 00

0FBD (PC=0DAF) 08 02

0FC0 (PC=0DAF) 00 0E E0 FF      => YM2 E002: 06 00 07 38
0FC3 (PC=0DAF) 00 21 C5         => YM2 E002: 00 C5 01 01
0FC6 (PC=0DAF) 00 42 1B         => YM2 E002: 02 1B 03 02
0FC9 (PC=0DAF) 00 61 0E         => YM2 E002: 04 0E 05 01
0FCC (PC=0DAF) 00 8F            => YM2 E002: 08 0F
0FCE (PC=0DAF) 00 AF            => YM2 E002: 09 0F
0FD0 (PC=0DAF) 00 CF            => YM2 E002: 0A 0F

0FD2 (PC=0DAF) 00
0FD3 (PC=0DAF) 1C               => YM2 E002: 00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00


"ENEMY INJURED"

0FD4: CF                => YM2: 00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00
0FD5: 00 1D FF D7       => YM2: 06 1F 07 10
0FD9: 00 22 FA          => YM2: 00 FA 01 02
0FDC: 00 45 F4          => YM2: 02 F4 03 05
0FDF: 00 61 68          => YM2: 04 68 05 01
0FE2: 00 8F             => YM2: 08 0F
0FE4: 00 AF             => YM2: 09 0F
0FE6: 00 CF             => YM2: 0A 0F
0FE8: 00
0FE9: 00 39 FF D7       => YM2: 06 1F 07 10
0FED: FC 22 FA          => YM2: 00 FA 01 02
0FF0: F2 45 F4          => YM2: 02 F4 03 05
0FF3: F4 61 68          => YM2: 04 68 05 01
0FF6: F6 8F             => YM2: 08 0F
0FF8: FF AF             => YM2: 09 0F
0FFA: FF CF             => YM2: 0A 0F
0FFC: FF

YM2: 00 F9 01 02
     02 F3 03 05
     04 67 05 01
YM2: 00 F8 01 02
     02 F2 03 05
     04 66 05 01
YM2: 00 F7 01 02
     02 F1 03 05
     04 66 05 01
YM2: 00 F6 01 02
     02 F1 03 05
     04 65 05 01
     08 0E 09 0E 0A 0E
     06 1E 07 10
YM2: 00 F5 01 02
     02 F0 03 05
     04 64 05 01
YM2: 00 F4 01 02
     02 EF 03 05
     04 64 05 01
YM2: 00 F3 01 02
     02 EE 03 05
     04 63 05 01
YM2: 00 F3 01 02
     02 EE 03 05
     04 63 05 01
     08 0E 09 0E 0A 0E
     06 1E 07 10
YM2: 00 F2 01 02
     02 ED 03 05
     04 62 05 01
YM2: 00 F1 01 02
     02 EC 03 05
     04 61 05 01
YM2: 00 F0 01 02
     02 EB 03 05
     04 61 05 01
YM2: 00 EF 01 02
     02 EB 03 05
     04 60 05 01
     08 0E 09 0E 0A 0E
     06 1D 07 10
YM2: 00 EE 01 02
     02 EA 03 05
     04 5F 05 01
YM2: 00 ED 01 02
     02 E9 03 05
     04 5F 05 01
YM2: 00 EC 01 02
     02 E8 03 05
     04 5E 05 01
YM2: 00 EC 01 02
     02 E8 03 05
     04 5E 05 01
     08 0E 09 0E 0A 0E
     06 1D 07 10
YM2: 00 EB 01 02
     02 E7 03 05
     04 5D 05 01
YM2: 00 EA 01 02
     02 E6 03 05
     04 5C 05 01
YM2: 00 E9 01 02
     02 E5 03 05
     04 5C 05 01
YM2: 00 E8 01 02
     02 E5 03 05
     04 5B 05 01
     08 0E 09 0E 0A 0E
     06 1C 07 10
YM2: 00 E7 01 02
     02 E4 03 05
     04 5A 05 01
YM2: 00 E6 01 02
     02 E3 03 05
     04 5A 05 01
YM2: 00 E5 01 02
     02 E2 03 05
     04 59 05 01
YM2: 00 E5 01 02
     02 E2 03 05
     04 59 05 01
     08 0E 09 0E 0A 0E
     06 1C 07 10
YM2: 00 E4 01 02
     02 E1 03 05
     04 58 05 01
YM2: 00 E3 01 02
     02 E0 03 05
     04 57 05 01
YM2: 00 E2 01 02
     02 DF 03 05
     04 57 05 01
YM2: 00 E1 01 02
     02 DF 03 05
     04 56 05 01
     08 0E 09 0E 0A 0E
     06 1B 07 10
YM2: 00 E0 01 02
     02 DE 03 05
     04 55 05 01
YM2: 00 DF 01 02
     02 DD 03 05
     04 55 05 01
YM2: 00 DE 01 02
     02 DC 03 05
     04 54 05 01
YM2: 00 DE 01 02
     02 DC 03 05
     04 54 05 01
     08 0E 09 0E 0A 0E
     06 1B 07 10
YM2: 00 DD 01 02
     02 DB 03 05
     04 53 05 01
YM2: 00 DC 01 02
     02 DA 03 05
     04 52 05 01
YM2: 00 DB 01 02
     02 D9 03 05
     04 52 05 01
YM2: 00 DA 01 02
     02 D9 03 05
     04 51 05 01
     08 0E 09 0E 0A 0E
     06 1A 07 10
YM2: 00 D9 01 02
     02 D8 03 05
     04 50 05 01
YM2: 00 D8 01 02
     02 D7 03 05
     04 50 05 01
YM2: 00 D7 01 02
     02 D6 03 05
     04 4F 05 01
YM2: 00 D7 01 02
     02 D6 03 05
     04 4F 05 01
     08 0E 09 0E 0A 0E
     06 1A 07 10
YM2: 00 D6 01 02
     02 D5 03 05
     04 4E 05 01
YM2: 00 D5 01 02
     02 D4 03 05
     04 4D 05 01
YM2: 00 D4 01 02
     02 D3 03 05
     04 4D 05 01
YM2: 00 D3 01 02
     02 D3 03 05
     04 4C 05 01
     08 0E 09 0E 0A 0E
     06 19 07 10
YM2: 00 D2 01 02
     02 D2 03 05
     04 4B 05 01
YM2: 00 D1 01 02
     02 D1 03 05
     04 4B 05 01
YM2: 00 D0 01 02
     02 D0 03 05
     04 4A 05 01
YM2: 00 D0 01 02
     02 D0 03 05
     04 4A 05 01
     08 0E 09 0E 0A 0E
     06 19 07 10
YM2: 00 CF 01 02
     02 CF 03 05
     04 49 05 01
YM2: 00 CE 01 02
     02 CE 03 05
     04 48 05 01
YM2: 00 CD 01 02
     02 CD 03 05
     04 48 05 01
YM2: 00 CC 01 02
     02 CD 03 05
     04 47 05 01
     08 0E 09 0E 0A 0E
     06 18 07 10
YM2: 00 CB 01 02
     02 CC 03 05
     04 46 05 01
YM2: 00 CA 01 02
     02 CB 03 05
     04 46 05 01
YM2: 00 C9 01 02
     02 CA 03 05
     04 45 05 01
YM2: 00 C9 01 02
     02 CA 03 05
     04 45 05 01
     08 0E 09 0E 0A 0E
     06 18 07 10

0FFD: 1C                => YM2: 00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00



"GAME OVER"

5448 (PC=0219) 06 55 54 74 54 93 54 AF 54 D0 54 F0 54 => YM1 E000: 40 7F 44 7F 48 7F 4C 7F 28 F0 28 00 41 7F 45 7F 49 7F 4D 7F 28 F1 28 01 42 7F 46 7F 4A 7F 4E 7F 28 F2 28 02; => YM2 E002: 40 7F 44 7F 48 7F 4C 7F 28 F0 28 00 41 7F 45 7F 49 7F 4D 7F 28 F1 28 01 42 7F 46 7F 4A 7F 4E 7F 28 F2 28 02

0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
 => YM1 E000: 24 CE 25 01 27 1F

0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 5455-5458 (PC=08F7) 00 07 07 15 => YM1 E000: B0 3D 30 01 34 01 38 01 3C 01 50 0D 54 14 58 12 5C 14 60 07 64 0E 68 08 6C 03 70 00 74 00 78 00 7C 00 80 14 84 18 88 18 8C 1A
BT COMMAND AT 5459-545D (PC=08F7) 02 C8 03 23 92 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 23 A0 93 28 F0
BT COMMAND AT 5474-5477 (PC=08F7) 00 07 07 15 => YM1 E000: B1 3D 31 01 35 01 39 01 3D 01 51 0D 55 14 59 12 5D 14 61 07 65 0E 69 08 6D 03 71 00 75 00 79 00 7D 00 81 14 85 18 89 18 8D 1A
BT COMMAND AT 5478-547C (PC=08F7) 02 C8 03 23 8D => YM1 E000: 41 1E 45 05 49 07 4D 07 A5 1D A1 5B 28 F1
BT COMMAND AT 5493-5496 (PC=08F7) 00 07 07 15 => YM1 E000: B2 3D 32 01 36 01 3A 01 3E 01 52 0D 56 14 5A 12 5E 14 62 07 66 0E 6A 08 6E 03 72 00 76 00 7A 00 7E 00 82 14 86 18 8A 18 8E 1A
BT COMMAND AT 5497-549B (PC=08F7) 02 C8 03 23 89 => YM1 E000: 42 1E 46 05 4A 07 4E 07 A6 1C A2 40 28 F2
BT COMMAND AT 54AF-54B2 (PC=08F7) 00 07 07 0C => YM2 E002: B0 38 30 02 34 02 38 02 3C 01 50 1F 54 11 58 11 5C 10 60 00 64 00 68 00 6C 02 70 01 74 01 78 01 7C 01 80 03 84 03 88 03 8C 38
BT COMMAND AT 54B3-54B8 (PC=08F7) 02 C8 03 17 06 B2 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
BT COMMAND AT 54D0-54D3 (PC=08F7) 00 07 07 15 => YM2 E002: B1 3D 31 01 35 01 39 01 3D 01 51 0D 55 14 59 12 5D 14 61 07 65 0E 69 08 6D 03 71 00 75 00 79 00 7D 00 81 14 85 18 89 18 8D 1A
BT COMMAND AT 54D4-54D8 (PC=08F7) 02 C8 03 23 E0 => YM2 E002: 28 01
BT COMMAND AT 54F0-54F3 (PC=08F7) 00 07 07 13 => YM2 E002: B2 3A 32 01 36 01 3A 27 3E 01 52 0E 56 5F 5A 19 5E 12 62 0A 66 0B 6A 0D 6E 03 72 00 76 00 7A 03 7E 00 82 15 86 25 8A FF 8E 28
BT COMMAND AT 54F4-54F8 (PC=08F7) 02 C8 03 2F 92 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 23 A2 93 28 F2

03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0208: ld   ($C001),a
020B: cp   $FF
020D: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 27 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 545 instructions)

0052: call $0136 => YM1 E000: 26 F4 27 2F
0055: call $01FC

   (loops for 682 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 470 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 732 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 415 instructions)

0052: call $0136 => YM1 E000: 26 F4 27 2F
0055: call $01FC

   (loops for 807 instructions)

0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 355 instructions)

0052: call $0136 => YM1 E000: 26 F4 27 2F
0055: call $01FC

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 278 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 225 instructions)

0052: call $0136 => YM1 E000: 26 F4 27 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 167 instructions)

0052: call $0136 => YM1 E000: 26 F4 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1060 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 88 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 37 instructions)

0052: call $0136 => YM1 E000: 26 F4 27 2F
0055: call $01FC

   (loops for 1185 instructions)

0041: call $011B => YM1 E000: 24 CE 25 01 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1151 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1140 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 86 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1062 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 142 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1009 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 211 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 952 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 276 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 872 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 330 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 821 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 762 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 464 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 684 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 520 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 631 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 589 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 574 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 494 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 708 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 443 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 384 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 842 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 306 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 898 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 253 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 967 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 196 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1032 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1086 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 65 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1157 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1098 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1244 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1254 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1182 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1186 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 48 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1127 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1063 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 990 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 242 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 940 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 312 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 864 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 811 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 754 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 502 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 545E (PC=08F7) 72 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 23 A0 93 28 F0
BT COMMAND AT 547D (PC=08F7) 6D => YM1 E000: 41 1E 45 05 49 07 4D 07 A5 1D A1 5B 28 F1
BT COMMAND AT 549C (PC=08F7) 69 => YM1 E000: 42 1E 46 05 4A 07 4E 07 A6 1C A2 40 28 F2
BT COMMAND AT 54F9 (PC=08F7) 72 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 23 A2 93 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 753 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 410 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 816 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 332 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 872 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 279 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 941 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 222 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1006 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 142 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1060 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 91 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1131 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 32 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1194 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1180 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 22 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1125 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 88 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1063 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 159 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 988 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 822 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 286 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 342 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 839 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 409 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 782 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 474 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 702 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 530 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 649 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 601 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 592 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 662 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 545F (PC=08F7) 72 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 23 A0 93 28 F0
BT COMMAND AT 547E (PC=08F7) 6D => YM1 E000: 41 1E 45 05 49 07 4D 07 A5 1D A1 5B 28 F1
BT COMMAND AT 549D (PC=08F7) 69 => YM1 E000: 42 1E 46 05 4A 07 4E 07 A6 1C A2 40 28 F2
BT COMMAND AT 54FA (PC=08F7) 72 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 23 A2 93 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 78 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 915 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 248 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 980 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1034 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 117 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1105 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 58 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1168 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1140 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 64 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1089 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 131 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1026 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 184 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 958 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 257 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 899 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 321 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 826 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 378 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 659 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 448 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 730 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 507 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 676 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 573 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 614 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 636 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 540 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 692 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 489 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 761 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 430 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 826 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 5460 (PC=08F7) D9 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 25 A0 5B 28 F0
BT COMMAND AT 547F (PC=08F7) D5 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 40 28 F1
BT COMMAND AT 549E (PC=08F7) B2 => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 23 A2 93 28 F2
BT COMMAND AT 54FB (PC=08F7) D9 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 25 A2 5B 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 994 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 88 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1140 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 8 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1194 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1225 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1140 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 36 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1117 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 105 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1052 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 156 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 986 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 231 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 927 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 293 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 854 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 350 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 801 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 419 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM2 E002: 28 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 709 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 484 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 672 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 538 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 619 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 609 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 557 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 672 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 482 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 728 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 431 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 797 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 369 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 860 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 916 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 243 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 985 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 179 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1050 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 51 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1177 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1202 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1157 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 15 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 78 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1076 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1025 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 966 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 888 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 837 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 391 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 778 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 647 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 590 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 644 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 702 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 457 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 398 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 320 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 269 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 210 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 54B9 (PC=08F7) 72 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 16 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 14 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1164 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 38 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1109 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1045 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 972 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 920 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 302 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 846 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 358 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 793 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 427 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 736 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 492 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 656 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 546 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 605 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM2 E002: 28 00
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 516 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 680 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 423 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 805 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 364 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 924 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 233 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 997 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 174 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1060 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 54BA (PC=08F7) 72 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1166 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM1 E000: 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1184 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1192 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1160 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 76 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1072 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1015 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 213 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 942 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 891 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 338 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 816 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 758 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 463 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 702 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 528 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 628 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 584 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 573 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 655 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM2 E002: 28 00
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 486 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 718 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 444 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 772 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 393 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 843 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 334 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 908 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 254 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 962 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 205 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1031 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1094 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 549F (PC=08F7) D0 => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 23 A2 2F 28 F2
BT COMMAND AT 54BB (PC=08F7) 92 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1202 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1154 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1145 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 59 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1104 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1024 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 973 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 249 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 902 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 312 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 836 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 783 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 726 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 502 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 646 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 556 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 595 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 627 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 536 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 690 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 458 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 746 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 405 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 815 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 348 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 880 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 934 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 217 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1005 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 158 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1068 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 80 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 27 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1193 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1178 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 31 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1132 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 84 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1056 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 157 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1001 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 875 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 348 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM2 E002: 28 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 770 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 409 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 748 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 473 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 694 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 538 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 616 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 594 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 565 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 663 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 508 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 726 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 428 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 377 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 851 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 318 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 916 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 970 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 187 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1041 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 130 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1104 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 50 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54BC (PC=08F7) 92 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1180 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM1 E000: 28 00 28 01 => YM2 E002: 28 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1130 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 2 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1173 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 69 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1110 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 120 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1042 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 985 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 257 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 912 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 859 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 385 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 795 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 448 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 722 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 669 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 573 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 607 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 636 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 534 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 690 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 481 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 763 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 417 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 826 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 344 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 880 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 293 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 949 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 229 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1014 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 156 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1070 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 103 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1139 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 39 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1204 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1238 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1246 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1238 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1246 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1192 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1174 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 42 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1128 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 98 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1075 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 167 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1016 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 938 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 887 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 355 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 828 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 420 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM2 E002: 28 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 720 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 476 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 703 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 545 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 646 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 610 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 568 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 664 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 515 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 735 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 456 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 798 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 378 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 854 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 327 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 923 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 268 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 988 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1042 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 137 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1113 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 80 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1176 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5461 (PC=08F7) B9 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 25 A0 5B 28 F0
BT COMMAND AT 5480 (PC=08F7) B5 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 40 28 F1
BT COMMAND AT 54BD (PC=08F7) 80 => YM2 E002: 28 00
BT COMMAND AT 54FC (PC=08F7) B9 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 25 A2 5B 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 398 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1202 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1157 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 15 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 78 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1076 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1025 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 966 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 888 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 837 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 391 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 778 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 647 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 590 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 644 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 702 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 457 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 398 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 320 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 269 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 210 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 79 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 22 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1222 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1170 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1164 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 38 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1115 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1053 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 978 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 928 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 304 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 850 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 360 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 799 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 429 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 742 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 492 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 662 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 548 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 611 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 552 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 682 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 421 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 807 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 364 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 284 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 233 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 176 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1058 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 96 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 45 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1183 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 54BE (PC=08F7) 92 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1140 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 76 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F => YM1 E000: 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1036 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1015 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 213 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 942 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 889 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 340 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 816 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 758 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 463 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 702 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 528 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 628 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 582 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 575 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 653 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 518 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 716 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 438 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 774 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 385 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 843 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 326 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 908 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 962 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 197 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1031 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 138 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1096 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 60 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1150 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 7 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1221 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM1 E000: 28 00 28 01 => YM2 E002: 28 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1146 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1178 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 59 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1132 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1056 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 187 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1001 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 247 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 928 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 304 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 875 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 376 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 800 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 439 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 742 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 499 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 688 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 564 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 612 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM2 E002: 28 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 529 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 691 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 508 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 754 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 430 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 808 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 379 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 879 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 320 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 942 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 998 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 189 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1067 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 132 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 52 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1259 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1254 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 5462 (PC=08F7) 77 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 24 A0 C6 28 F0
BT COMMAND AT 5481 (PC=08F7) 77 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
BT COMMAND AT 54A0 (PC=08F7) 21 CE => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 22 A2 D6 28 F2
BT COMMAND AT 54BF (PC=08F7) 21 D3 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 C9 28 F0
BT COMMAND AT 54D9 (PC=08F7) A0 => YM2 E002: 28 01
BT COMMAND AT 54FD (PC=08F7) 77 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 24 A2 C6 28 F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 766 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 33 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1164 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 96 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1084 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 152 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1033 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 976 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 896 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 340 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 845 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 411 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 784 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 476 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 706 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 530 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 655 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 599 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 596 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 664 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 518 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 718 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 467 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 787 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 408 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 852 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 330 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 908 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 275 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 979 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 218 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1042 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 140 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1096 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 87 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1167 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM1 E000: 28 00 28 01 => YM2 E002: 28 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1170 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1278 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1278 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 5463 (PC=08F7) 79 => YM1 E000: 40 1F 44 05 48 07 4C 07 A4 25 A0 5B 28 F0
BT COMMAND AT 5482 (PC=08F7) 79 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 25 A1 5B 28 F1
BT COMMAND AT 54FE (PC=08F7) 79 => YM2 E002: 42 1A 46 2F 4A 1A 4E 00 A6 25 A2 5B 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 452 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 69 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1128 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1048 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 997 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 257 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 938 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 322 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 860 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 376 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 809 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 445 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 750 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 512 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 670 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 566 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 619 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 635 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 560 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 700 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 482 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 754 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 429 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 825 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 372 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 888 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 942 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 241 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1015 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 182 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1078 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 104 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 51 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1203 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1258 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM1 E000: 28 00 28 01 => YM2 E002: 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1158 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1280 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1266 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1278 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5464 (PC=08F7) 22 BA => YM1 E000: 40 20 44 05 48 07 4C 07 A4 2A A0 D6 28 F0
BT COMMAND AT 5483 (PC=08F7) 22 B7 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
BT COMMAND AT 54FF (PC=08F7) 22 BA => YM2 E002: 42 1A 46 30 4A 1A 4E 00 A6 2A A2 D6 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 294 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 156 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1068 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 229 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1011 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 293 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 938 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 348 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 885 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 420 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 812 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 481 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 752 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 547 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 696 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 610 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 666 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 569 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 735 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 512 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 798 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 432 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 854 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 381 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 923 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 322 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 988 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 244 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1042 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 191 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1113 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 134 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1176 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 56 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1230 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 7 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1297 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1282 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1238 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 4 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1227 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 70 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1163 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 141 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1090 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 196 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1038 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 964 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 911 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 854 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 776 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 723 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 666 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 644 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 586 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 535 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 474 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 396 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 345 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 286 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 155 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 98 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 18 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1307 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1306 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1246 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1240 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 38 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1191 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 54DA (PC=08F7) 77 => YM2 E002: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 39 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1046 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 996 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 304 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 920 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 358 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 869 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 429 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 810 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 492 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 732 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 548 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 679 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 622 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 682 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 542 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 491 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 807 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 432 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 354 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 301 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 244 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1060 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 164 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 113 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1185 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 54 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1248 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1292 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1300 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM2 E002: 28 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1306 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1270 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1234 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 25 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1222 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 76 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 151 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 54DB (PC=08F7) 79 => YM2 E002: 41 1F 45 05 49 07 4D 07 A5 25 A1 5B 28 F1
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 37 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1010 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 270 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 957 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 340 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 884 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 403 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 824 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 465 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 770 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 530 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 694 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 584 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 643 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 655 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 584 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 718 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 506 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 774 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 453 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 843 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 396 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 908 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 316 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 962 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 265 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1033 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 206 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1096 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 128 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1152 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 75 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1221 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 18 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1286 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1288 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1292 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1302 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM2 E002: 28 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1236 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 59 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1186 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 5466 (PC=08F7) 9A
BT COMMAND AT 5485 (PC=08F7) 97
BT COMMAND AT 54DC (PC=08F7) 9A => YM2 E002: 41 20 45 05 49 07 4D 07 A5 2A A1 D6 28 F1
BT COMMAND AT 5501 (PC=08F7) 9A
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 304 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 923 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 376 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 848 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 790 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 501 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 734 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 564 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 660 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 607 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 689 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 550 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 754 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 470 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 808 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 419 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 879 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 360 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 942 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 282 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 998 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 229 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1067 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 172 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 92 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 41 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1257 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1300 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1292 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1300 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1288 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1264 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 28 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1201 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1138 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 148 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1070 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1013 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 285 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 938 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 340 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 887 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 411 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 823 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 474 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 750 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 530 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 697 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 599 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 635 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 664 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 560 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 718 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 509 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 789 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 445 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 852 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 372 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 908 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 319 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 977 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 257 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1042 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 182 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1096 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 131 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1167 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM2 E002: 28 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 37 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 2 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1284 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1307 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1235 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1234 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 70 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1162 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1109 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 1052 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 258 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 5467 (PC=08F7) 00 08 9A => YM1 E000: 40 20 44 05 48 07 4C 07 A4 2A A0 D6 28 F0
BT COMMAND AT 5486 (PC=08F7) 00 08 97 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
BT COMMAND AT 54A2 (PC=08F7) 00 08 8E => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 22 A2 D6 28 F2
BT COMMAND AT 54C1 (PC=08F7) 00 08 93 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 C9 28 F0
BT COMMAND AT 54DD (PC=08F7) 07 14 => YM2 E002: B1 34 31 01 35 01 39 01 3D 01 51 14 55 14 59 0F 5D 0F 61 0D 65 00 69 0A 6D 0A 71 00 75 00 79 00 7D 00 81 13 85 13 89 38 8D 47
BT COMMAND AT 54DF (PC=08F7) 00 08 73 => YM2 E002: 41 0C 45 11 49 09 4D 03 A5 23 A1 C9 28 F1
BT COMMAND AT 5502 (PC=08F7) 00 08 9A => YM2 E002: 42 1A 46 30 4A 1A 4E 00 A6 2A A2 D6 28 F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 38 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 635 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 520 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 700 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 442 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 754 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 389 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 825 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 332 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 888 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 944 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 201 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1013 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 142 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1078 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 62 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 11 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1203 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1216 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 41 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1114 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 94 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1038 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 169 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 983 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 231 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 908 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 859 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 356 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM2 E002: 28 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 754 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 419 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 732 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 483 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 676 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 546 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 602 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 602 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 549 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 671 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 492 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 736 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 412 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 790 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54E2 (PC=08F7) 75 => YM2 E002: 41 0C 45 11 49 09 4D 03 A5 24 A1 40 28 F1
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 242 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 924 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 978 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 165 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1049 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 108 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1112 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 28 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1217 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1200 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 8 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1137 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 77 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1072 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 130 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1006 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 00 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 803 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 265 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 910 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 857 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 793 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 458 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 720 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 669 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 605 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM2 E002: 28 01
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 500 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 702 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 485 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 423 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 834 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 350 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 888 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 299 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 233 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 546A (PC=08F7) 9C => YM1 E000: 40 20 44 05 48 07 4C 07 A4 2B A0 2F 28 F0
BT COMMAND AT 5489 (PC=08F7) 97 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
BT COMMAND AT 54A5 (PC=08F7) 92 => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 23 A2 93 28 F2
BT COMMAND AT 54C4 (PC=08F7) 93 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 C9 28 F0
BT COMMAND AT 54E3 (PC=08F7) 96 => YM2 E002: 41 0C 45 11 49 09 4D 03 A5 24 A1 81 28 F1
BT COMMAND AT 5505 (PC=08F7) 9C => YM2 E002: 42 1A 46 30 4A 1A 4E 00 A6 2B A2 2F 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 320 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 1154 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 1150 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 52 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1088 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1039 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 980 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 240 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 902 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 849 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 365 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 790 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 430 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 712 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 484 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 659 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 555 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 602 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 618 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 522 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 471 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 743 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 412 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 808 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 334 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 862 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 281 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 933 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 222 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 998 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 144 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1052 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 91 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1121 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 36 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1184 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1182 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1148 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 14 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1127 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 78 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1065 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 992 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 940 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 276 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 866 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 330 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 813 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 754 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 466 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 676 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 520 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 623 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 591 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 566 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 486 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 710 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 435 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 376 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 844 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 900 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 245 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 969 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9 => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 00 28 01 28 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 12 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1032 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 150 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1088 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 99 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1157 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 42 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1222 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1192 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 48 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1135 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 546B (PC=08F7) 9A => YM1 E000: 40 20 44 05 48 07 4C 07 A4 2A A0 D6 28 F0
BT COMMAND AT 548A (PC=08F7) 97 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
BT COMMAND AT 54A6 (PC=08F7) 92 => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 23 A2 93 28 F2
BT COMMAND AT 54C5 (PC=08F7) 93 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 C9 28 F0
BT COMMAND AT 54E4 (PC=08F7) 07 0D => YM2 E002: B1 3A 31 01 35 01 39 01 3D 01 51 0E 55 0C 59 0D 5D 0F 61 07 65 00 69 07 6D 02 71 00 75 00 79 01 7D 00 81 05 85 04 89 05 8D 08
BT COMMAND AT 54E6 (PC=08F7) 6E => YM2 E002: 41 21 45 1A 49 2E 4D 00 A5 1A A1 D6 28 F1
BT COMMAND AT 5506 (PC=08F7) 9A => YM2 E002: 42 1A 46 30 4A 1A 4E 00 A6 2A A2 D6 28 F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 470 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 494 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 652 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 564 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 576 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 525 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 689 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 466 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 754 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 388 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 808 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 335 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 879 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 276 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 944 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 998 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 145 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1069 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 88 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1130 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 10 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1217 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 28 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1117 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1056 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 988 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM2 E002: 28 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 901 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 283 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 864 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 340 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 811 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 409 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 749 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 474 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 528 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 623 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 599 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 559 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 662 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 54E7 (PC=08F7) 70 => YM2 E002: 41 21 45 1A 49 2E 4D 00 A5 1B A1 2F 28 F1
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 362 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 787 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 363 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 852 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 906 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 237 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 977 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 178 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1042 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 100 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1096 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 47 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1167 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1196 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F

   (loops for 1148 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 70 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 00 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1055 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 998 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 258 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 918 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 867 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 383 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 808 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 448 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 730 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F => YM2 E002: 28 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 647 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 571 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 628 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 636 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 546 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 692 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 495 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 761 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 438 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 826 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 358 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 880 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 307 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 949 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 546C (PC=08F7) 9C => YM1 E000: 40 20 44 05 48 07 4C 07 A4 2B A0 2F 28 F0
BT COMMAND AT 548B (PC=08F7) 97 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 24 A1 C6 28 F1
BT COMMAND AT 54A7 (PC=08F7) 92 => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 23 A2 93 28 F2
BT COMMAND AT 54C6 (PC=08F7) 93 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 C9 28 F0
BT COMMAND AT 54E8 (PC=08F7) 91 => YM2 E002: 41 21 45 1A 49 2E 4D 00 A5 1B A1 60 28 F1
BT COMMAND AT 5507 (PC=08F7) 9C => YM2 E002: 42 1A 46 30 4A 1A 4E 00 A6 2B A2 2F 28 F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 306 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1164 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1150 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 42 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1098 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 98 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1045 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 169 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 988 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 908 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 859 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 355 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 800 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 420 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 722 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 669 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 545 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 610 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 610 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 532 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 664 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 479 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 735 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 422 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 798 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 342 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 854 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 291 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 923 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 232 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 988 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 154 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1042 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 101 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1113 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 42 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1178 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1192 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1148 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 4 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1135 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 72 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1073 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 141 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 998 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 948 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 266 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 874 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 823 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 391 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 764 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 686 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 633 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 574 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 496 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 443 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 386 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 834 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F => YM1 E000: 28 00 28 01 28 02 => YM2 E002: 28 00 28 01 28 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 130 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 297 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 240 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 109 instructions)

0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC

   (loops for 1147 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 50 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1214 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153 => YM1 E000: 24 CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153 => YM1 E000: 25 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153 => YM1 E000: 27 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136 => YM1 E000: 26 F4 => YM1 E000: 27 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153 => YM1 E000: 26 F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153 => YM1 E000: 27 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B => YM1 E000: 24 CE => YM1 E000: 25 01 => YM1 E000: 27 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 546D (PC=08F7) 00 09 22 DE => YM1 E000: 40 20 44 05 48 07 4C 07 A4 2B A0 93 28 F0
BT COMMAND AT 548C (PC=08F7) 00 09 22 D9 => YM1 E000: 41 1F 45 05 49 07 4D 07 A5 25 A1 5B 28 F1
BT COMMAND AT 54A8 (PC=08F7) 00 09 22 D6 => YM1 E000: 42 1F 46 05 4A 07 4E 07 A6 24 A2 81 28 F2
BT COMMAND AT 54C7 (PC=08F7) 00 09 B2 => YM2 E002: 40 28 44 1B 48 1B 4C 07 A4 1B A0 93 28 F0
BT COMMAND AT 54E9 (PC=08F7) 00 09 21 D2 => YM2 E002: 41 21 45 1A 49 2E 4D 00 A5 1B A1 93 28 F1
BT COMMAND AT 5508 (PC=08F7) 00 09 BE => YM2 E002: 42 1B 46 30 4A 1A 4E 00 A6 2B A2 93 28 F2

0047: call $039F

BT COMMAND AT 54CA (PC=08F7) AD => YM2 E002: 40 27 44 1B 48 1B 4C 07 A4 15 A0 5B 28 F0
BT COMMAND AT 550B (PC=08F7) 07 07 => YM2 E002: B2 06 32 7D 36 34 3A 32 3E 74 52 1F 56 1F 5A 1F 5E 1F 62 0D 66 0A 6A 0A 6E 0A 72 00 76 00 7A 00 7E 00 82 F5 86 F5 8A F5 8E F5
BT COMMAND AT 550D (PC=08F7) AD => YM2 E002: 42 1B 46 07 4A 16 4E 0D A6 25 A2 5B 28 F2

0044: call $0A50
0047: call $039F

BT COMMAND AT 5471 (PC=08F7) FE
BT COMMAND AT 5490 (PC=08F7) F9
BT COMMAND AT 54AC (PC=08F7) F6
BT COMMAND AT 54CB (PC=08F7) 8F => YM2 E002: 40 27 44 1B 48 1B 4C 07 A4 1B A0 01 28 F0
BT COMMAND AT 54ED (PC=08F7) D2 => YM2 E002: 41 21 45 1A 49 2E 4D 00 A5 1B A1 93 28 F1
BT COMMAND AT 550E (PC=08F7) 8F => YM2 E002: 42 1B 46 07 4A 16 4E 0D A6 2B A2 01 28 F2

0044: call $0A50
0047: call $039F

BT COMMAND AT 54CC (PC=08F7) 06 AD => YM2 E002: 40 27 44 1B 48 1B 4C 07 A4 15 A0 5B 28 F0
BT COMMAND AT 550F (PC=08F7) 06 AD => YM2 E002: 42 1B 46 07 4A 16 4E 0D A6 25 A2 5B 28 F2

0047: call $039F

BT COMMAND AT 54CE (PC=08F7) E6 => YM2 E002: 40 26 44 1B 48 1B 4C 07 A4 13 A0 93 28 F0
BT COMMAND AT 54EE (PC=08F7) F9 => YM2 E002: 41 21 45 1A 49 2E 4D 00 A5 1D A1 5B 28 F1
BT COMMAND AT 5511 (PC=08F7) E6 => YM2 E002: 42 1B 46 09 4A 16 4E 0D A6 23 A2 93 28 F2




61 02 02
A5 42 7F 71
A5 46 7F 71
A5 4A 7F 71
A5 4E 7F 71
A5 28 F2 72
A5 41 7F 71
A5 45 7F 71
A5 49 7F 70
A5 4D 7F 71
A5 28 F1 73
A5 40 7F 71
A5 44 7F 71
A5 48 7F 70
A5 4C 7F 71
A5 28 F0 73

55 42 7F 71
55 46 7F 70
55 4A 7F 71
55 4E 7F 71
55 28 F2 73
55 41 7F 70
55 45 7F 71
55 49 7F 71
55 4D 7F 71
55 28 F1 72
55 40 7F 71
55 44 7F 71
55 48 7F 71
55 4C 7F 71
55 28 F0 72

A5
28 02 73 A5
28 01 72 A5
28 00 73 55
28 02 72 55
28 01 73 55
28 00 72 55
00 00 71 55 01 00 71 55
02 00 71 55 03 00 71 55
04 00 71 55 05 00 71 55
06 00 71 55 07 F8 71 55
08 00 71 55 09 00 71 55
0A 00 72 A5

00 00 71 A5 01 00 71 A5
02 00 71 A5 03 00 71 A5
04 00 71 A5 05 00 71 A5
06 00 71 A5 07 F8 71 A5
08 00 71 A5 09 00 71 A5
0A 00 71 55 2D 01 71 A5 2D 01 71 55 27 00 61 BC 0F 55 28 F0 72 55 28 00 7A 55 28 F1 72 55 28 01 7A 55 28 F2 72 55 28 02 79 A5 28 F0 72 A5 28 00 7A A5 28 F1 72 A5 28 01 7A A5 28 F2 72 A5 28 02 61 24 00 55 B0 3D 73 55 30 01 74 55 34 01 74 55 38 01 74 55 3C 01 74 55 50 0D 74 55 54 14 74 55 58 12 73 55 5C 14 74 55 60 07 74 55 64 0E 74 55 68 08 73 55 6C 03 74 55 70 00 74 55 74 00 74 55 78 00 73 55 7C 00 74 55 80 14 74 55 84 18 74 55 88 18 73 55 8C 1A 61 57 00 55 40 1F 7F 70 55 44 05 7F 70 55 48 07 7F 55 4C 07 75 55 A4 23 73 55 A0 93 73 55 28 F0 7F 78 55 B1 3D 73 55 31 01 74 55 35 01 74 55 39 01 73 55 3D 01 75 55 51 0D 73 55 55 14 74 55 59 12 74 55 5D 14 74 55 61 07 73 55 65 0E 74 55 69 08 74 55 6D 03 74 55 71 00 73 55 75 00 74 55 79 00 74 55 7D 00 74 55 81 14 73 55 85 18 74 55 89 18 74 55 8D 1A 61 57 00 55 41 1E 7F 70 55 45 05 7F 70 55 49 07 7F 55 4D 07 75 55 A5 1D 73 55 A1 5B 73 55 28 F1 7F 78 55 B2 3D 73 55 32 01 74 55 36 01 74 55 3A 01 74 55 3E 01 74 55 52 0D 74 55 56 14 74 55 5A 12 73 55 5E 14 74 55 62 07 74 55 66 0E 74 55 6A 08 73 55 6E 03 74 55 72 00 74 55 76 00 74 55 7A 00 73 55 7E 00 74 55 82 14 74 55 86 18 74 55 8A 18 73 55 8E 1A 61 57 00 55 42 1E 7F 70 55 46 05 7F 70 55 4A 07 7F 55 4E 07 75 55 A6 1C 73 55 A2 40 73 55 28 F2 7F 78 A5 B0 38 74 A5 30 02 74 A5 34 02 74 A5 38 02 74 A5 3C 01 74 A5 50 1F 74 A5 54 11 74 A5 58 11 74 A5 5C 10 74 A5 60 00 74 A5 64 00 74 A5 68 00 74 A5 6C 02 74 A5 70 01 74 A5 74 01 74 A5 78 01 74 A5 7C 01 74 A5 80 03 74 A5 84 03 74 A5 88 03 74 A5 8C 38 61 5A 00 A5 40 28 7F 70 A5 44 1B 7F 70 A5 48 1B 7F 70 A5 4C 07 75 A5 A4 1B 73 A5 A0 93 73 A5 28 F0 7F 78 A5 B1 3D 74 A5 31 01 74 A5 35 01 74 A5 39 01 74 A5 3D 01 74 A5 51 0D 74 A5 55 14 74 A5 59 12 74 A5 5D 14 74 A5 61 07 74 A5 65 0E 74 A5 69 08 74 A5 6D 03 74 A5 71 00 74 A5 75 00 74 A5 79 00 74 A5 7D 00 74 A5 81 14 74 A5 85 18 74 A5 89 18 74 A5 8D 1A 61 36 00 A5 B2 3A 74 A5 32 01 74 A5 36 01 74 A5 3A 27 74 A5 3E 01 74 A5 52 0E 74 A5 56 5F 74 A5 5A 19 74 A5 5E 12 74 A5 62 0A 74 A5 66 0B 74 A5 6A 0D 74 A5 6E 03 74 A5 72 00 74 A5 76 00 74 A5 7A 03 74 A5 7E 00 74 A5 82 15 74 A5 86 25 74 A5 8A FF 74 A5 8E 28 61 57 00 A5 42 1A 7F 70 A5 46 2F 7F 70 A5 4A 1A 7F 70 A5 4E 00 75 A5 A6 23 73 A5 A2 93 73 A5 28 F2 61 6C 1C 55 28 00 78 55 28 01 79 55 28 02 7F 76 A5 28 02 61 54 09 55 28 F0 61 90 00 55 28 F1 61 90 00 55 28 F2 61 9E 00 A5 28 F2 61 97 0D 55 28 00 78 55 28 01 79 55 28 02 7F 76 A5 28 02 61 31 05 55 28 F0 61 90 00 55 28 F1 61 90 00 55 28 F2 61 9E 00 A5 28 F2 61 96 0D 55 28 00 79 55 28 01 79 55 28 02 7F 76 A5 28 02 61 28 05 55 A4 25 73 55 A0 5B 73 55 28 F0 61 4F 00 55 41 1F 61 39 00 55 A5 24 73 55 A1 40 73 55 28 F1 61 4F 00 55 42 1F 61 38 00 55 A6 23 73 55 A2 93 73 55 28 F2 61 96 00 A5 A6 25 73 A5 A2 5B 73 A5 28 F2 61 4A 0C A5 28 00 61 0C 1A A5 28 F0 61 F2 0D A5 28 00 61 5D 05 A5 28 F0 61 82 01 55 28 02 61 70 0C A5 28 00 61 4C 05 55 A6 23 73 55 A2 2F 73 55 28 F2 61 91 00 A5 28 F0 61 95 1C A5 28 00 61 7F 09 A5 28 F0 61 38 04 55 28 00 78 55 28 01 7F 7C A5 28 02 61 BF 18 A5 28 00 61 6C 09 55 28 F0 61 90 00 55 28 F1 61 B4 00 A5 28 F2 61 1E 26 A5 28 F0 61 45 04 55 28 02 61 7F 10 55 28 00 79 55 28 01 7F 7C A5 28 02 61 32 08 A5 28 00 61 64 09 55 A4 24 73 55 A0 C6 73 55 28 F0 61 88 00 55 A5 24 73 55 A1 C6 73 55 28 F1 61 8A 00 55 A6 22 73 55 A2 D6 73 55 28 F2 61 8C 00 A5 A4 1B 73 A5 A0 C9 73 A5 28 F0 61 A0 00 A5 A6 24 73 A5 A2 C6 73 A5 28 F2 61 A7 0D 55 28 00 78 55 28 01 7F 79 A5 28 02 61 30 05 55 A4 25 73 55 A0 5B 73 55 28 F0 61 88 00 55 A5 25 73 55 A1 5B 73 55 28 F1 61 99 00 A5 A6 25 73 A5 A2 5B 73 A5 28 F2 61 73 0D 55 28 00 78 55 28 01 7F 79 A5 28 02 61 FA 04 55 40 20 61 38 00 55 A4 2A 73 55 A0 D6 73 55 28 F0 61 8B 00 55 A5 24 73 55 A1 C6 73 55 28 F1 61 74 00 A5 46 30 61 28 00 A5 A6 2A 73 A5 A2 D6 73 A5 28 F2 61 E8 25 A5 41 1F 7F 70 A5 45 05 7F 70 A5 49 07 7F 70 A5 4D 07 75 A5 A5 24 73 A5 A1 C6 73 A5 28 F1 61 F3 0D A5 28 01 61 54 05 A5 A5 25 73 A5 A1 5B 73 A5 28 F1 61 F3 0D A5 28 01 61 35 05 A5 41 20 61 39 00 A5 A5 2A 73 A5 A1 D6 73 A5 28 F1 61 04 1D A5 28 01 61 47 0B A5 B1 34 7F 78 A5 51 14 79 A5 59 0F 74 A5 5D 0F 74 A5 61 0D 74 A5 65 00 74 A5 69 0A 74 A5 6D 0A 7F 78 A5 81 13 74 A5 85 13 74 A5 89 38 74 A5 8D 47 61 52 00 A5 41 0C 7F 70 A5 45 11 7F 70 A5 49 09 7F 70 A5 4D 03 75 A5 A5 23 73 A5 A1 C9 73 A5 28 F1 61 BE 10 A5 28 01 61 58 05 A5 A5 24 73 A5 A1 40 73 A5 28 F1 61 C3 0B 55 28 00 78 55 28 01 79 55 28 02 79 A5 28 00 7F 70 A5 28 02 61 BD 04 A5 28 01 61 3C 05 55 A4 2B 73 55 A0 2F 73 55 28 F0 61 90 00 55 28 F1 61 88 00 55 A6 23 73 55 A2 93 73 55 28 F2 61 91 00 A5 28 F0 61 89 00 A5 A5 24 73 A5 A1 81 73 A5 28 F1 61 8A 00 A5 A6 2B 73 A5 A2 2F 73 A5 28 F2 61 E0 21 55 28 00 79 55 28 01 79 55 28 02 79 A5 28 00 79 A5 28 01 79 A5 28 02 61 F5 09 55 A4 2A 73 55 A0 D6 73 55 28 F0 61 8F 00 55 28 F1 61 91 00 55 28 F2 61 90 00 A5 28 F0 7F 75 A5 B1 3A 7F 78 A5 51 0E 74 A5 55 0C 74 A5 59 0D 79 A5 61 07 79 A5 69 07 74 A5 6D 02 7E A5 79 01 79 A5 81 05 74 A5 85 04 74 A5 89 05 74 A5 8D 08 61 4C 00 A5 41 21 7F 70 A5 45 1A 7F 70 A5 49 2E 7F 70 A5 4D 00 75 A5 A5 1A 73 A5 A1 D6 73 A5 28 F1 61 8A 00 A5 A6 2A 73 A5 A2 D6 73 A5 28 F2 61 49 10 A5 28 01 61 54 05 A5 A5 1B 72 A5 A1 2F 73 A5 28 F1 61 C8 0B 55 28 00 78 55 28 01 79 55 28 02 79 A5 28 00 7F 70 A5 28 02 61 BD 04 A5 28 01 61 3B 05 55 A4 2B 73 55 A0 2F 73 55 28 F0 61 90 00 55 28 F1 61 90 00 55 28 F2 61 91 00 A5 28 F0 61 8A 00 A5 A5 1B 73 A5 A1 60 73 A5 28 F1 61 8A 00 A5 A6 2B 73 A5 A2 2F 73 A5 28 F2 61 E0 21 55 28 00 78 55 28 01 79 55 28 02 79 A5 28 00 79 A5 28 01 79 A5 28 02 61 FE 09 55 A4 2B 73 55 A0 93 73 55 28 F0 61 91 00 55 A5 25 73 55 A1 5B 73 55 28 F1 61 91 00 55 A6 24 73 55 A2 81 73 55 28 F2 61 90 00 A5 A4 1B 73 A5 A0 93 73 A5 28 F0 61 92 00 A5 A5 1B 73 A5 A1 93 73 A5 28 F1 61 57 00 A5 42 1B 61 39 00 A5 A6 2B 73 A5 A2 93 73 A5 28 F2 61 80 4C A5 28 00 7E A5 28 02 61 4D 16 A5 40 27 61 39 00 A5 A4 15 73 A5 A0 5B 73 A5 28 F0 7F 79 A5 B2 06 74 A5 32 7D 74 A5 36 34 74 A5 3A 32 74 A5 3E 74 74 A5 52 1F 74 A5 56 1F 74 A5 5A 1F 74 A5 5E 1F 74 A5 62 0D 74 A5 66 0A 74 A5 6A 0A 74 A5 6E 0A 7E A5 7A 00 79 A5 82 F5 74 A5 86 F5 74 A5 8A F5 74 A5 8E F5 61 5D 00 A5 46 07 7F 70 A5 4A 16 7F 70 A5 4E 0D 75 A5 A6 25 73 A5 A2 5B 73 A5 28 F2 61 54 4C A5 28 00 7E A5 28 02 61 AA 16 A5 A4 1B 73 A5 A0 01 73 A5 28 F0 61 1A 01 A5 A6 2B 73 A5 A2 01 73 A5 28 F2 61 7B 25 A5 28 00 7F A5 28 02 61 7A 0B A5 A4 15 73 A5 A0 5B 73 A5 28 F0 61 92 00 A5 A6 25 73 A5 A2 5B 73 A5 28 F2 61 62 68 A5 28 01 61 52 0A A5 28 00 7F A5 28 02 61 50 21 A5 40 26 61 39 00 A5 A4 13 73 A5 A0 93 73 A5 28 F0 61 8A 00 A5 A5 1D 73 A5 A1 5B 73 A5 28 F1 61 62 00 A5 46 09 61 28 00 A5 A6 23 73 A5 A2 93 73 A5 28 F2 61 FF FF 61 B5 36 A5 28 00 79 A5 28 01 79 A5 28 02 61 99 2A 55 28 00 78 55 28 01 79 55 28 02 61 25 2C 55 40 7F 70 55 44 7F 71 55 48 7F 71 55 4C 7F 71 55 28 F0 72 55 28 00 74 55 41 7F 70 55 45 7F 71 55 49 7F 71 55 4D 7F 71 55 28 F1 72 55 28 01 74 55 42 7F 70 55 46 7F 71 55 4A 7F 71 55 4E 7F 71 55 28 F2 72 55 28 02 74 A5 40 7F 71 A5 44 7F 70 A5 48 7F 71 A5 4C 7F 71 A5 28 F0 72 A5 28 00 74 A5 41 7F 71 A5 45 7F 71 A5 49 7F 70 A5 4D 7F 71 A5 28 F1 72 A5 28 01 75 A5 42 7F 70 A5 46 7F 71 A5 4A 7F 71 A5 4E 7F 71 A5 28 F2 72 A5 28 02 61 FF FF 61




class ssAY8910 : public ssSoundChip
{
public:
    enum {
        TYPE_NORMAL = 0,
        TYPE_YM2203,
        TYPE_YM2608,
        TYPE_YM2610,
        TYPE_M88 = 0x10,
        TYPE_YM2203_M88,
        TYPE_YM2608_M88,
        TYPE_YM2610_M88,
    };
    enum {
        PORT_A = 0,
        PORT_B,
    };


READ 0F7F (PC=0219) CF
YM2: 00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00

READ 0F80 (CURRENT) 04
READ 0F81 (NEXT) 00
READ 0F81 (CURRENT) 00
READ 0F82 (NEXT) 05
READ 0F82 (CURRENT) 05
READ 0F83 (NEXT) E0
READ 0F83 (CURRENT) E0
READ 0F84 (NEXT) FF
READ 0F84 (CURRENT) FF
READ 0F85 (NEXT) 00
YM2: 06 00 07 38
READ 0F85 (CURRENT) 00
READ 0F86 (NEXT) 22
READ 0F86 (CURRENT) 22
READ 0F87 (NEXT) 5C
READ 0F87 (CURRENT) 5C
READ 0F88 (NEXT) 00
YM2: 00 5C 01 02
READ 0F88 (CURRENT) 00
READ 0F89 (NEXT) 41
READ 0F89 (CURRENT) 41
READ 0F8A (NEXT) 3C
READ 0F8A (CURRENT) 3C
READ 0F8B (NEXT) 00
YM2: 02 3C 03 01
READ 0F8B (CURRENT) 00
READ 0F8C (NEXT) 62
READ 0F8C (CURRENT) 62
READ 0F8D (NEXT) D7
READ 0F8D (CURRENT) D7
READ 0F8E (NEXT) 00
YM2: 04 D7 05 02
READ 0F8E (CURRENT) 00
READ 0F8F (NEXT) 8F
READ 0F8F (CURRENT) 8F
READ 0F90 (NEXT) 00
YM2: 08 0F
READ 0F90 (CURRENT) 00
READ 0F91 (NEXT) AF
READ 0F91 (CURRENT) AF
READ 0F92 (NEXT) FF
YM2: 09 0F
READ 0F92 (CURRENT) FF
READ 0F93 (NEXT) CF
READ 0F93 (CURRENT) CF
READ 0F94 (NEXT) 00
YM2: 0A 0F
READ 0F94 (CURRENT) 00
READ 0F95 (NEXT) 00

YM2: 09 0E

READ 0F95 (CURRENT) 00
READ 0F96 (NEXT) 02
READ 0F96 (CURRENT) 02
READ 0F97 (NEXT) E0
READ 0F97 (CURRENT) E0
READ 0F98 (NEXT) FF
READ 0F98 (CURRENT) FF
READ 0F99 (NEXT) 00
YM2: 06 00 07 38
READ 0F99 (CURRENT) 00
READ 0F9A (NEXT) 20
READ 0F9A (CURRENT) 20
READ 0F9B (NEXT) 00
READ 0F9B (CURRENT) 00
READ 0F9C (NEXT) 00
YM2: 00 00 01 00
READ 0F9C (CURRENT) 00
READ 0F9D (NEXT) 40
READ 0F9D (CURRENT) 40
READ 0F9E (NEXT) 00
READ 0F9E (CURRENT) 00
READ 0F9F (NEXT) 00
YM2: 02 00 03 00
READ 0F9F (CURRENT) 00
READ 0FA0 (NEXT) 60
READ 0FA0 (CURRENT) 60
READ 0FA1 (NEXT) 00
READ 0FA1 (CURRENT) 00
READ 0FA2 (NEXT) 00
YM2: 04 00 05 00
READ 0FA2 (CURRENT) 00
READ 0FA3 (NEXT) 80
READ 0FA3 (CURRENT) 80
READ 0FA4 (NEXT) 00
YM2: 08 00
READ 0FA4 (CURRENT) 00
READ 0FA5 (NEXT) A0
READ 0FA5 (CURRENT) A0
READ 0FA6 (NEXT) 00
YM2: 09 00
READ 0FA6 (CURRENT) 00
READ 0FA7 (NEXT) C0
READ 0FA7 (CURRENT) C0
READ 0FA8 (NEXT) 00
YM2: 0A 00
READ 0FA8 (CURRENT) 00
READ 0FA9 (NEXT) 00

READ 0FA9 (CURRENT) 00
READ 0FAA (NEXT) 08
READ 0FAA (CURRENT) 08
READ 0FAB (NEXT) E0
READ 0FAB (CURRENT) E0
READ 0FAC (NEXT) FF
READ 0FAC (CURRENT) FF
READ 0FAD (NEXT) 00
YM2: 06 00 07 38
READ 0FAD (CURRENT) 00
READ 0FAE (NEXT) 24
READ 0FAE (CURRENT) 24
READ 0FAF (NEXT) 35
READ 0FAF (CURRENT) 35
READ 0FB0 (NEXT) 00
YM2: 00 35 01 04
READ 0FB0 (CURRENT) 00
READ 0FB1 (NEXT) 41
READ 0FB1 (CURRENT) 41
READ 0FB2 (NEXT) 68
READ 0FB2 (CURRENT) 68
READ 0FB3 (NEXT) 00
YM2: 02 68 03 01
READ 0FB3 (CURRENT) 00
READ 0FB4 (NEXT) 62
READ 0FB4 (CURRENT) 62
READ 0FB5 (NEXT) 3B
READ 0FB5 (CURRENT) 3B
READ 0FB6 (NEXT) 00
YM2: 04 3B 05 02
READ 0FB6 (CURRENT) 00
READ 0FB7 (NEXT) 8F
READ 0FB7 (CURRENT) 8F
READ 0FB8 (NEXT) 00
YM2: 08 0F
READ 0FB8 (CURRENT) 00
READ 0FB9 (NEXT) AF
READ 0FB9 (CURRENT) AF
READ 0FBA (NEXT) 00
YM2: 09 0F
READ 0FBA (CURRENT) 00
READ 0FBB (NEXT) CF
READ 0FBB (CURRENT) CF
READ 0FBC (NEXT) 00
YM2: 0A 0F
READ 0FBC (CURRENT) 00
READ 0FBD (NEXT) 08

READ 0FBD (CURRENT) 08
READ 0FBE (NEXT) 02
READ 0FBE (CURRENT) 02
READ 0FBF (NEXT) 00
READ 0F81 (CURRENT) 00
READ 0F82 (NEXT) 05
READ 0F82 (CURRENT) 05
READ 0F83 (NEXT) E0
READ 0F83 (CURRENT) E0
READ 0F84 (NEXT) FF
READ 0F84 (CURRENT) FF
READ 0F85 (NEXT) 00
YM2: 06 00 07 38
READ 0F85 (CURRENT) 00
READ 0F86 (NEXT) 22
READ 0F86 (CURRENT) 22
READ 0F87 (NEXT) 5C
READ 0F87 (CURRENT) 5C
READ 0F88 (NEXT) 00
YM2: 00 5C 01 02
READ 0F88 (CURRENT) 00
READ 0F89 (NEXT) 41
READ 0F89 (CURRENT) 41
READ 0F8A (NEXT) 3C
READ 0F8A (CURRENT) 3C
READ 0F8B (NEXT) 00
YM2: 02 3C 03 01
READ 0F8B (CURRENT) 00
READ 0F8C (NEXT) 62
READ 0F8C (CURRENT) 62
READ 0F8D (NEXT) D7
READ 0F8D (CURRENT) D7
READ 0F8E (NEXT) 00
YM2: 04 D7 05 02
READ 0F8E (CURRENT) 00
READ 0F8F (NEXT) 8F
READ 0F8F (CURRENT) 8F
READ 0F90 (NEXT) 00
YM2: 08 0F
READ 0F90 (CURRENT) 00
READ 0F91 (NEXT) AF
READ 0F91 (CURRENT) AF
READ 0F92 (NEXT) FF
YM2: 09 0F
READ 0F92 (CURRENT) FF
READ 0F93 (NEXT) CF
READ 0F93 (CURRENT) CF
READ 0F94 (NEXT) 00
YM2: 0A 0F
READ 0F94 (CURRENT) 00
READ 0F95 (NEXT) 00

YM2: 09 0E

READ 0F95 (CURRENT) 00
READ 0F96 (NEXT) 02
READ 0F96 (CURRENT) 02
READ 0F97 (NEXT) E0
READ 0F97 (CURRENT) E0
READ 0F98 (NEXT) FF
READ 0F98 (CURRENT) FF
READ 0F99 (NEXT) 00
YM2: 06 00 07 38
READ 0F99 (CURRENT) 00
READ 0F9A (NEXT) 20
READ 0F9A (CURRENT) 20
READ 0F9B (NEXT) 00
READ 0F9B (CURRENT) 00
READ 0F9C (NEXT) 00
YM2: 00 00 01 00
READ 0F9C (CURRENT) 00
READ 0F9D (NEXT) 40
READ 0F9D (CURRENT) 40
READ 0F9E (NEXT) 00
READ 0F9E (CURRENT) 00
READ 0F9F (NEXT) 00
YM2: 02 00 03 00
READ 0F9F (CURRENT) 00
READ 0FA0 (NEXT) 60
READ 0FA0 (CURRENT) 60
READ 0FA1 (NEXT) 00
READ 0FA1 (CURRENT) 00
READ 0FA2 (NEXT) 00
YM2: 04 00 05 00
READ 0FA2 (CURRENT) 00
READ 0FA3 (NEXT) 80
READ 0FA3 (CURRENT) 80
READ 0FA4 (NEXT) 00
YM2: 08 00
READ 0FA4 (CURRENT) 00
READ 0FA5 (NEXT) A0
READ 0FA5 (CURRENT) A0
READ 0FA6 (NEXT) 00
YM2: 09 00
READ 0FA6 (CURRENT) 00
READ 0FA7 (NEXT) C0
READ 0FA7 (CURRENT) C0
READ 0FA8 (NEXT) 00
YM2: 0A 00
READ 0FA8 (CURRENT) 00
READ 0FA9 (NEXT) 00

READ 0FA9 (CURRENT) 00
READ 0FAA (NEXT) 08
READ 0FAA (CURRENT) 08
READ 0FAB (NEXT) E0
READ 0FAB (CURRENT) E0
READ 0FAC (NEXT) FF
READ 0FAC (CURRENT) FF
READ 0FAD (NEXT) 00
YM2: 06 00 07 38
READ 0FAD (CURRENT) 00
READ 0FAE (NEXT) 24
READ 0FAE (CURRENT) 24
READ 0FAF (NEXT) 35
READ 0FAF (CURRENT) 35
READ 0FB0 (NEXT) 00
YM2: 00 35 01 04
READ 0FB0 (CURRENT) 00
READ 0FB1 (NEXT) 41
READ 0FB1 (CURRENT) 41
READ 0FB2 (NEXT) 68
READ 0FB2 (CURRENT) 68
READ 0FB3 (NEXT) 00
YM2: 02 68 03 01
READ 0FB3 (CURRENT) 00
READ 0FB4 (NEXT) 62
READ 0FB4 (CURRENT) 62
READ 0FB5 (NEXT) 3B
READ 0FB5 (CURRENT) 3B
READ 0FB6 (NEXT) 00
YM2: 04 3B 05 02
READ 0FB6 (CURRENT) 00
READ 0FB7 (NEXT) 8F
READ 0FB7 (CURRENT) 8F
READ 0FB8 (NEXT) 00
YM2: 08 0F
READ 0FB8 (CURRENT) 00
READ 0FB9 (NEXT) AF
READ 0FB9 (CURRENT) AF
READ 0FBA (NEXT) 00
YM2: 09 0F
READ 0FBA (CURRENT) 00
READ 0FBB (NEXT) CF
READ 0FBB (CURRENT) CF
READ 0FBC (NEXT) 00
YM2: 0A 0F
READ 0FBC (CURRENT) 00
READ 0FBD (NEXT) 08

READ 0FBD (CURRENT) 08
READ 0FBE (NEXT) 02
READ 0FBE (CURRENT) 02
READ 0FBF (NEXT) 00
READ 0FBF (CURRENT) 00
READ 0FC0 (NEXT) 0E
READ 0FC0 (CURRENT) 0E
READ 0FC1 (NEXT) E0
READ 0FC1 (CURRENT) E0
READ 0FC2 (NEXT) FF
READ 0FC2 (CURRENT) FF
READ 0FC3 (NEXT) 00
YM2: 06 00 07 38
READ 0FC3 (CURRENT) 00
READ 0FC4 (NEXT) 21
READ 0FC4 (CURRENT) 21
READ 0FC5 (NEXT) C5
READ 0FC5 (CURRENT) C5
READ 0FC6 (NEXT) 00
YM2: 00 C5 01 01
READ 0FC6 (CURRENT) 00
READ 0FC7 (NEXT) 42
READ 0FC7 (CURRENT) 42
READ 0FC8 (NEXT) 1B
READ 0FC8 (CURRENT) 1B
READ 0FC9 (NEXT) 00
YM2: 02 1B 03 02
READ 0FC9 (CURRENT) 00
READ 0FCA (NEXT) 61
READ 0FCA (CURRENT) 61
READ 0FCB (NEXT) 0E
READ 0FCB (CURRENT) 0E
READ 0FCC (NEXT) 00
YM2: 04 0E 05 01
READ 0FCC (CURRENT) 00
READ 0FCD (NEXT) 8F
READ 0FCD (CURRENT) 8F
READ 0FCE (NEXT) 00
YM2: 08 0F
READ 0FCE (CURRENT) 00
READ 0FCF (NEXT) AF
READ 0FCF (CURRENT) AF
READ 0FD0 (NEXT) 00
YM2: 09 0F
READ 0FD0 (CURRENT) 00
READ 0FD1 (NEXT) CF
READ 0FD1 (CURRENT) CF
READ 0FD2 (NEXT) 00
YM2: 0A 0F
READ 0FD2 (CURRENT) 00
READ 0FD3 (NEXT) 1C
READ 0FD3 (CURRENT) 1C
YM2: 00 00 01 00 02 00 03 00 04 00 05 00 06 00 07 F8 08 00 09 00 0A 00




BT COMMAND AT 5448 (YM1) 06
BT COMMAND AT 5449 (YM1) 55
BT COMMAND AT 544A (YM1) 54
BT COMMAND AT 544B (YM1) 74
BT COMMAND AT 544C (YM1) 54
BT COMMAND AT 544D (YM1) 93
BT COMMAND AT 544E (YM1) 54
BT COMMAND AT 544F (YM1) AF
BT COMMAND AT 5450 (YM1) 54
BT COMMAND AT 5451 (YM1) D0
BT COMMAND AT 5452 (YM1) 54
BT COMMAND AT 5453 (YM1) F0
BT COMMAND AT 5454 (YM1) 54
YM1 E000: 40
YM1 E001: 7F
YM1 E000: 44
YM1 E001: 7F
YM1 E000: 48
YM1 E001: 7F
YM1 E000: 4C
YM1 E001: 7F
YM1 E000: 28
YM1 E001: F0
YM1 E000: 28
YM1 E001: 00
YM1 E000: 41
YM1 E001: 7F
YM1 E000: 45
YM1 E001: 7F
YM1 E000: 49
YM1 E001: 7F
YM1 E000: 4D
YM1 E001: 7F
YM1 E000: 28
YM1 E001: F1
YM1 E000: 28
YM1 E001: 01
YM1 E000: 42
YM1 E001: 7F
YM1 E000: 46
YM1 E001: 7F
YM1 E000: 4A
YM1 E001: 7F
YM1 E000: 4E
YM1 E001: 7F
YM1 E000: 28
YM1 E001: F2
YM1 E000: 28
YM1 E001: 02
YM2 E002: 40
YM2 E003: 7F
YM2 E002: 44
YM2 E003: 7F
YM2 E002: 48
YM2 E003: 7F
YM2 E002: 4C
YM2 E003: 7F
YM2 E002: 28
YM2 E003: F0
YM2 E002: 28
YM2 E003: 00
YM2 E002: 41
YM2 E003: 7F
YM2 E002: 45
YM2 E003: 7F
YM2 E002: 49
YM2 E003: 7F
YM2 E002: 4D
YM2 E003: 7F
YM2 E002: 28
YM2 E003: F1
YM2 E002: 28
YM2 E003: 01
YM2 E002: 42
YM2 E003: 7F
YM2 E002: 46
YM2 E003: 7F
YM2 E002: 4A
YM2 E003: 7F
YM2 E002: 4E
YM2 E003: 7F
YM2 E002: 28
YM2 E003: F2
YM2 E002: 28
YM2 E003: 02
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5455 (YM1) 00
BT COMMAND AT 5456 (YM1) 07
BT COMMAND AT 5457 (YM1) 07
BT COMMAND AT 5458 (YM1) 15
YM1 E000: B0
YM1 E001: 3D
YM1 E000: 30
YM1 E001: 01
YM1 E000: 34
YM1 E001: 01
YM1 E000: 38
YM1 E001: 01
YM1 E000: 3C
YM1 E001: 01
YM1 E000: 50
YM1 E001: 0D
YM1 E000: 54
YM1 E001: 14
YM1 E000: 58
YM1 E001: 12
YM1 E000: 5C
YM1 E001: 14
YM1 E000: 60
YM1 E001: 07
YM1 E000: 64
YM1 E001: 0E
YM1 E000: 68
YM1 E001: 08
YM1 E000: 6C
YM1 E001: 03
YM1 E000: 70
YM1 E001: 00
YM1 E000: 74
YM1 E001: 00
YM1 E000: 78
YM1 E001: 00
YM1 E000: 7C
YM1 E001: 00
YM1 E000: 80
YM1 E001: 14
YM1 E000: 84
YM1 E001: 18
YM1 E000: 88
YM1 E001: 18
YM1 E000: 8C
YM1 E001: 1A
BT COMMAND AT 5459 (YM1) 02
BT COMMAND AT 545A (YM1) C8
BT COMMAND AT 545B (YM1) 03
BT COMMAND AT 545C (YM1) 23
BT COMMAND AT 545D (YM1) 92
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 23
YM1 E000: A0
YM1 E001: 93
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5474 (YM1) 00
BT COMMAND AT 5475 (YM1) 07
BT COMMAND AT 5476 (YM1) 07
BT COMMAND AT 5477 (YM1) 15
YM1 E000: B1
YM1 E001: 3D
YM1 E000: 31
YM1 E001: 01
YM1 E000: 35
YM1 E001: 01
YM1 E000: 39
YM1 E001: 01
YM1 E000: 3D
YM1 E001: 01
YM1 E000: 51
YM1 E001: 0D
YM1 E000: 55
YM1 E001: 14
YM1 E000: 59
YM1 E001: 12
YM1 E000: 5D
YM1 E001: 14
YM1 E000: 61
YM1 E001: 07
YM1 E000: 65
YM1 E001: 0E
YM1 E000: 69
YM1 E001: 08
YM1 E000: 6D
YM1 E001: 03
YM1 E000: 71
YM1 E001: 00
YM1 E000: 75
YM1 E001: 00
YM1 E000: 79
YM1 E001: 00
YM1 E000: 7D
YM1 E001: 00
YM1 E000: 81
YM1 E001: 14
YM1 E000: 85
YM1 E001: 18
YM1 E000: 89
YM1 E001: 18
YM1 E000: 8D
YM1 E001: 1A
BT COMMAND AT 5478 (YM1) 02
BT COMMAND AT 5479 (YM1) C8
BT COMMAND AT 547A (YM1) 03
BT COMMAND AT 547B (YM1) 23
BT COMMAND AT 547C (YM1) 8D
YM1 E000: 41
YM1 E001: 1E
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 1D
YM1 E000: A1
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 5493 (YM1) 00
BT COMMAND AT 5494 (YM1) 07
BT COMMAND AT 5495 (YM1) 07
BT COMMAND AT 5496 (YM1) 15
YM1 E000: B2
YM1 E001: 3D
YM1 E000: 32
YM1 E001: 01
YM1 E000: 36
YM1 E001: 01
YM1 E000: 3A
YM1 E001: 01
YM1 E000: 3E
YM1 E001: 01
YM1 E000: 52
YM1 E001: 0D
YM1 E000: 56
YM1 E001: 14
YM1 E000: 5A
YM1 E001: 12
YM1 E000: 5E
YM1 E001: 14
YM1 E000: 62
YM1 E001: 07
YM1 E000: 66
YM1 E001: 0E
YM1 E000: 6A
YM1 E001: 08
YM1 E000: 6E
YM1 E001: 03
YM1 E000: 72
YM1 E001: 00
YM1 E000: 76
YM1 E001: 00
YM1 E000: 7A
YM1 E001: 00
YM1 E000: 7E
YM1 E001: 00
YM1 E000: 82
YM1 E001: 14
YM1 E000: 86
YM1 E001: 18
YM1 E000: 8A
YM1 E001: 18
YM1 E000: 8E
YM1 E001: 1A
BT COMMAND AT 5497 (YM1) 02
BT COMMAND AT 5498 (YM1) C8
BT COMMAND AT 5499 (YM1) 03
BT COMMAND AT 549A (YM1) 23
BT COMMAND AT 549B (YM1) 89
YM1 E000: 42
YM1 E001: 1E
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 1C
YM1 E000: A2
YM1 E001: 40
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54AF (YM1) 00
BT COMMAND AT 54B0 (YM1) 07
BT COMMAND AT 54B1 (YM1) 07
BT COMMAND AT 54B2 (YM1) 0C
YM2 E002: B0
YM2 E003: 38
YM2 E002: 30
YM2 E003: 02
YM2 E002: 34
YM2 E003: 02
YM2 E002: 38
YM2 E003: 02
YM2 E002: 3C
YM2 E003: 01
YM2 E002: 50
YM2 E003: 1F
YM2 E002: 54
YM2 E003: 11
YM2 E002: 58
YM2 E003: 11
YM2 E002: 5C
YM2 E003: 10
YM2 E002: 60
YM2 E003: 00
YM2 E002: 64
YM2 E003: 00
YM2 E002: 68
YM2 E003: 00
YM2 E002: 6C
YM2 E003: 02
YM2 E002: 70
YM2 E003: 01
YM2 E002: 74
YM2 E003: 01
YM2 E002: 78
YM2 E003: 01
YM2 E002: 7C
YM2 E003: 01
YM2 E002: 80
YM2 E003: 03
YM2 E002: 84
YM2 E003: 03
YM2 E002: 88
YM2 E003: 03
YM2 E002: 8C
YM2 E003: 38
BT COMMAND AT 54B3 (YM1) 02
BT COMMAND AT 54B4 (YM1) C8
BT COMMAND AT 54B5 (YM1) 03
BT COMMAND AT 54B6 (YM1) 17
BT COMMAND AT 54B7 (YM1) 06
BT COMMAND AT 54B8 (YM1) B2
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54D0 (YM1) 00
BT COMMAND AT 54D1 (YM1) 07
BT COMMAND AT 54D2 (YM1) 07
BT COMMAND AT 54D3 (YM1) 15
YM2 E002: B1
YM2 E003: 3D
YM2 E002: 31
YM2 E003: 01
YM2 E002: 35
YM2 E003: 01
YM2 E002: 39
YM2 E003: 01
YM2 E002: 3D
YM2 E003: 01
YM2 E002: 51
YM2 E003: 0D
YM2 E002: 55
YM2 E003: 14
YM2 E002: 59
YM2 E003: 12
YM2 E002: 5D
YM2 E003: 14
YM2 E002: 61
YM2 E003: 07
YM2 E002: 65
YM2 E003: 0E
YM2 E002: 69
YM2 E003: 08
YM2 E002: 6D
YM2 E003: 03
YM2 E002: 71
YM2 E003: 00
YM2 E002: 75
YM2 E003: 00
YM2 E002: 79
YM2 E003: 00
YM2 E002: 7D
YM2 E003: 00
YM2 E002: 81
YM2 E003: 14
YM2 E002: 85
YM2 E003: 18
YM2 E002: 89
YM2 E003: 18
YM2 E002: 8D
YM2 E003: 1A
BT COMMAND AT 54D4 (YM1) 02
BT COMMAND AT 54D5 (YM1) C8
BT COMMAND AT 54D6 (YM1) 03
BT COMMAND AT 54D7 (YM1) 23
BT COMMAND AT 54D8 (YM1) E0
YM2 E002: 28
YM2 E003: 01
BT COMMAND AT 54F0 (YM1) 00
BT COMMAND AT 54F1 (YM1) 07
BT COMMAND AT 54F2 (YM1) 07
BT COMMAND AT 54F3 (YM1) 13
YM2 E002: B2
YM2 E003: 3A
YM2 E002: 32
YM2 E003: 01
YM2 E002: 36
YM2 E003: 01
YM2 E002: 3A
YM2 E003: 27
YM2 E002: 3E
YM2 E003: 01
YM2 E002: 52
YM2 E003: 0E
YM2 E002: 56
YM2 E003: 5F
YM2 E002: 5A
YM2 E003: 19
YM2 E002: 5E
YM2 E003: 12
YM2 E002: 62
YM2 E003: 0A
YM2 E002: 66
YM2 E003: 0B
YM2 E002: 6A
YM2 E003: 0D
YM2 E002: 6E
YM2 E003: 03
YM2 E002: 72
YM2 E003: 00
YM2 E002: 76
YM2 E003: 00
YM2 E002: 7A
YM2 E003: 03
YM2 E002: 7E
YM2 E003: 00
YM2 E002: 82
YM2 E003: 15
YM2 E002: 86
YM2 E003: 25
YM2 E002: 8A
YM2 E003: FF
YM2 E002: 8E
YM2 E003: 28
BT COMMAND AT 54F4 (YM1) 02
BT COMMAND AT 54F5 (YM1) C8
BT COMMAND AT 54F6 (YM1) 03
BT COMMAND AT 54F7 (YM1) 2F
BT COMMAND AT 54F8 (YM1) 92
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 23
YM2 E002: A2
YM2 E003: 93
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 594 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 350 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 801 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 421 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 738 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 484 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 664 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 540 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 611 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 609 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 550 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 674 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 728 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 423 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 799 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 360 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 862 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 918 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 233 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 987 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 172 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1052 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 96 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 45 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1177 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1194 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 15 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1148 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 66 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1074 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 141 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1017 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 944 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 891 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 330 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 818 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 758 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 455 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 704 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 520 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 628 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 574 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 577 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 645 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 518 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 708 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 440 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 764 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 387 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 833 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 330 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 898 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 952 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 199 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1023 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 140 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1086 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 62 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1142 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1107 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1254 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1246 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1254 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1246 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1252 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 51 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1140 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 102 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1068 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1011 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 239 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 545E (YM1) 72
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 23
YM1 E000: A0
YM1 E001: 93
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 547D (YM1) 6D
YM1 E000: 41
YM1 E001: 1E
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 1D
YM1 E000: A1
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 549C (YM1) 69
YM1 E000: 42
YM1 E001: 1E
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 1C
YM1 E000: A2
YM1 E001: 40
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54F9 (YM1) 72
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 23
YM2 E002: A2
YM2 E003: 93
YM2 E002: 28
YM2 E003: F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 491 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 667 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 553 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 598 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 606 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 541 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 680 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 472 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 743 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 404 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 805 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 354 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 278 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 924 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 227 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 168 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1058 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 90 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 37 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1183 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1226 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1038 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1168 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 74 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1094 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1037 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 213 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 964 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 911 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 338 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 838 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 545F (YM1) 72
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 23
YM1 E000: A0
YM1 E001: 93
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 547E (YM1) 6D
YM1 E000: 41
YM1 E001: 1E
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 1D
YM1 E000: A1
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 549D (YM1) 69
YM1 E000: 42
YM1 E001: 1E
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 1C
YM1 E000: A2
YM1 E001: 40
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54FA (YM1) 72
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 23
YM2 E002: A2
YM2 E003: 93
YM2 E002: 28
YM2 E003: F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 351 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 494 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 710 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 441 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 384 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 844 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 304 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 898 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 253 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 969 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 194 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1032 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1088 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 63 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1157 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1152 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 50 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1097 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 921 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 990 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 242 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 938 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 312 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 864 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 813 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 754 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 502 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 556 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5460 (YM1) D9
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 25
YM1 E000: A0
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 547F (YM1) D5
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: 40
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 549E (YM1) B2
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 23
YM1 E000: A2
YM1 E001: 93
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54FB (YM1) D9
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 25
YM2 E002: A2
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 194 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 816 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 332 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 872 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 279 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 941 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 222 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1006 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 142 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1060 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 91 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1131 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 32 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1194 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1182 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 20 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1127 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 88 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1063 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 157 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 00
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 960 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 944 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 286 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 870 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 340 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 817 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 411 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 760 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 474 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 680 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 530 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 629 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 599 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 572 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 662 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 492 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 718 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 441 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 787 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 382 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 852 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 304 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 906 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 251 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 979 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 192 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1042 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1098 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 61 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1160 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1162 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 58 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1090 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 131 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1033 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 960 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 909 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 320 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 834 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 383 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 776 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 445 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 720 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 510 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 646 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 566 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 591 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 637 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 534 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 700 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 456 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 754 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54B9 (YM1) 72
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 292 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 888 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 944 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 207 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1013 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 150 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1078 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 70 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 19 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1203 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 41 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1122 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 94 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1046 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 991 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 231 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 916 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 865 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 358 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
YM2 E002: 28
YM2 E003: 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 760 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 419 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 738 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 483 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 684 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 546 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 610 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 600 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 557 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 671 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 500 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 734 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 420 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 790 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54BA (YM1) 72
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 258 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 924 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 980 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 143 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1049 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 120 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1114 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 42 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1231 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1214 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1148 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 8 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1151 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 77 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1088 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 128 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1020 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 963 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 267 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 886 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 324 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 835 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM2 E002: 28
YM2 E003: 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 743 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 706 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 655 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 591 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 516 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 465 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 401 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 834 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 549F (YM1) D0
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 23
YM1 E000: A2
YM1 E001: 2F
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54BB (YM1) 92
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 177 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 128 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 67 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 10 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1164 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 50 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1098 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1045 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 988 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 240 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 908 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 857 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 365 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 798 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 428 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 720 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 484 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 667 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 553 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 610 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 618 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 530 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 672 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 479 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 743 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 420 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 806 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 342 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 862 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 289 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 931 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 232 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 996 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 152 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1050 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 101 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1121 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 42 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1184 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1190 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1156 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 12 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1135 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 80 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
YM2 E002: 28
YM2 E003: 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1041 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1006 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 952 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 278 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 878 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 332 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 827 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 768 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 466 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 690 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 520 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 637 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 591 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 580 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 500 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 710 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 449 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 390 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 844 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 898 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54BC (YM1) 92
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 150 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1032 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 116 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1086 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 65 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1157 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM2 E002: 28
YM2 E003: 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1138 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1238 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1246 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1174 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1178 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 48 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1121 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1057 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 984 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 242 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 932 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 312 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 856 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 805 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 748 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 500 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 668 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 558 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 615 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 627 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 558 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 690 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 478 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 746 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 427 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 815 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 370 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 878 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 936 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 237 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1005 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1068 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 102 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1122 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 49 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1193 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1246 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1238 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1246 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1238 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1246 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1174 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 33 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 84 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1076 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 159 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
YM2 E002: 28
YM2 E003: 00
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 991 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 954 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 278 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 903 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 348 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 828 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 411 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 768 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 473 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 714 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 538 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 640 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 592 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 587 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 663 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 528 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 726 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 450 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 399 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 851 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 340 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 916 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 970 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5461 (YM1) B9
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 25
YM1 E000: A0
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5480 (YM1) B5
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: 40
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54BD (YM1) 80
YM2 E002: 28
YM2 E003: 00
BT COMMAND AT 54FC (YM1) B9
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 25
YM2 E002: A2
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 400 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1164 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 62 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1097 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 131 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1040 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 194 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 960 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 909 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 319 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 850 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 384 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 772 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 438 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 719 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 511 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 660 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 574 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 580 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 630 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 529 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 699 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 472 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 762 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 392 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 818 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 341 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 887 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 282 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 952 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1006 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 151 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1077 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 94 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1140 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 16 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1194 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1231 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1188 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 36 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1125 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 105 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1058 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 158 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 992 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 231 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 935 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 293 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 860 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 350 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 809 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 419 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 745 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 484 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 672 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 538 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 619 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 609 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 557 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 672 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 482 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 728 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 431 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 797 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 369 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 860 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 916 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 243 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 985 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 179 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1050 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54BE (YM1) 92
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1178 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1224 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1196 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1202 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1157 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 15 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 78 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1076 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1025 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 966 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 888 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 835 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 778 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 647 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 590 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 644 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 459 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 398 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 320 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 269 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 210 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 79 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 22 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM2 E002: 28
YM2 E003: 02

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1144 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1242 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1244 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1254 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1192 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 1184 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 52 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 108 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1073 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1016 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 240 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 936 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 883 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 367 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 00
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 796 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 428 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 754 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 486 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 701 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 555 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 644 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 618 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 566 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 513 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 743 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 456 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 806 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 376 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 864 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 323 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 933 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 266 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 996 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1050 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 137 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1121 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 76 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1186 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 5462 (YM1) 77
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 24
YM1 E000: A0
YM1 E001: C6
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5481 (YM1) 77
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: C6
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54A0 (YM1) 21
BT COMMAND AT 54A1 (YM1) CE
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 22
YM1 E000: A2
YM1 E001: D6
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54BF (YM1) 21
BT COMMAND AT 54C0 (YM1) D3
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: C9
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54D9 (YM1) A0
YM2 E002: 28
YM2 E003: 01
BT COMMAND AT 54FD (YM1) 77
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 24
YM2 E002: A2
YM2 E003: C6
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 6 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 872 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1224 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1185 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 16 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1169 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 86 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1094 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 142 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1043 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 213 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 980 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 276 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 904 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 332 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 853 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 790 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 466 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 716 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 520 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 665 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 589 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 602 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 528 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 710 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 475 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 412 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 844 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 338 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 898 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 199 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 969 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 244 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1032 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 172 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1086 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 119 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1157 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 56 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1222 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1266 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5463 (YM1) 79
YM1 E000: 40
YM1 E001: 1F
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 25
YM1 E000: A0
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5482 (YM1) 79
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 25
YM1 E000: A1
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54FE (YM1) 79
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 2F
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 25
YM2 E002: A2
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 586 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1258 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1184 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1183 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 59 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1138 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 124 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1058 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 178 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1005 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 249 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 948 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 312 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 868 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 817 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 760 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 500 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 680 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 556 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 629 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 627 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 570 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 690 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 490 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 746 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 439 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 815 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 380 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 880 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 302 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 934 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 251 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1003 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM2 E002: 28
YM2 E003: 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 106 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1068 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 81 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 24 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1256 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1278 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 5464 (YM1) 22
BT COMMAND AT 5465 (YM1) BA
YM1 E000: 40
YM1 E001: 20
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 2A
YM1 E000: A0
YM1 E001: D6
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5483 (YM1) 22
BT COMMAND AT 5484 (YM1) B7
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: C6
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54FF (YM1) 22
BT COMMAND AT 5500 (YM1) BA
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 30
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 2A
YM2 E002: A2
YM2 E003: D6
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 542 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1272 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1222 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 26 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1209 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1152 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 158 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1072 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1021 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 962 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 348 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 884 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 404 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 829 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 475 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 772 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 538 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 694 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 592 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 641 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 663 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 584 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 726 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 504 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 453 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 851 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 394 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 916 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 316 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 970 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 263 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1041 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 206 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1104 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 128 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1158 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 75 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1229 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 18 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1292 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1298 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1224 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 2 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1233 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 69 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1172 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 120 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1104 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1047 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 257 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 974 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 921 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 383 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 859 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 446 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 784 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 733 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 571 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 669 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 638 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 594 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 692 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 541 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 763 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 479 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 826 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 406 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 880 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 353 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 951 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 291 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1014 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1070 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 165 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1139 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 101 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1204 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 28 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1307 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 54DA (YM1) 77
YM2 E002: 41
YM2 E003: 1F
YM2 E002: 45
YM2 E003: 05
YM2 E002: 49
YM2 E003: 07
YM2 E002: 4D
YM2 E003: 07
YM2 E002: A5
YM2 E003: 24
YM2 E002: A1
YM2 E003: C6
YM2 E002: 28
YM2 E003: F1
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 26 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1228 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 42 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1182 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 96 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1131 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1072 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 994 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 941 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 355 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 884 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 420 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 804 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 753 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 545 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 694 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 608 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 616 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 664 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 563 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 733 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 506 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 798 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 426 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 852 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 375 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 923 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 316 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 986 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 238 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1042 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 185 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1111 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 128 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1176 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
YM2 E002: 28
YM2 E003: 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 18 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1230 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 7 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1299 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1306 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54DB (YM1) 79
YM2 E002: 41
YM2 E003: 1F
YM2 E002: 45
YM2 E003: 05
YM2 E002: 49
YM2 E003: 07
YM2 E002: 4D
YM2 E003: 07
YM2 E002: A5
YM2 E003: 25
YM2 E002: A1
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F1
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 12 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1232 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 4 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1219 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 72 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1155 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 141 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1082 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1030 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 956 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 324 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 903 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 846 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 458 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 766 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 512 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 715 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 583 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 656 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 578 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 702 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 525 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 468 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 388 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 337 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 961 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 278 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 200 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1080 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 147 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 90 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1214 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
YM2 E002: 28
YM2 E003: 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 5466 (YM1) 9A
BT COMMAND AT 5485 (YM1) 97
BT COMMAND AT 54DC (YM1) 9A
YM2 E002: 41
YM2 E003: 20
YM2 E002: 45
YM2 E003: 05
YM2 E002: 49
YM2 E003: 07
YM2 E002: 4D
YM2 E003: 07
YM2 E002: A5
YM2 E003: 2A
YM2 E002: A1
YM2 E003: D6
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5501 (YM1) 9A
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 898 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 52 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1172 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1121 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 177 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1062 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 240 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 984 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 931 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 365 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 874 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 430 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 794 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 484 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 743 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 555 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 684 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 618 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 606 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 553 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 743 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 496 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 808 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 416 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 862 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 365 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 933 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 306 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 996 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 228 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1052 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 175 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1121 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 118 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1186 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 38 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1299 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1302 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1288 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1292 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1302 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1288 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1266 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1232 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 12 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1211 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 80 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1147 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1074 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1022 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 276 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 948 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 332 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 895 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 838 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 466 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 758 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 520 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 707 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 591 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 648 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 570 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 710 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 517 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 460 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 844 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 380 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 898 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM2 E002: 28
YM2 E003: 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 299 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 969 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 276 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1034 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1088 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 147 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1157 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 88 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1222 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 10 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1307 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1308 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1296 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1236 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 5467 (YM1) 00
BT COMMAND AT 5468 (YM1) 08
BT COMMAND AT 5469 (YM1) 9A
YM1 E000: 40
YM1 E001: 20
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 2A
YM1 E000: A0
YM1 E001: D6
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5486 (YM1) 00
BT COMMAND AT 5487 (YM1) 08
BT COMMAND AT 5488 (YM1) 97
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: C6
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54A2 (YM1) 00
BT COMMAND AT 54A3 (YM1) 08
BT COMMAND AT 54A4 (YM1) 8E
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 22
YM1 E000: A2
YM1 E001: D6
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54C1 (YM1) 00
BT COMMAND AT 54C2 (YM1) 08
BT COMMAND AT 54C3 (YM1) 93
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: C9
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54DD (YM1) 07
BT COMMAND AT 54DE (YM1) 14
YM2 E002: B1
YM2 E003: 34
YM2 E002: 31
YM2 E003: 01
YM2 E002: 35
YM2 E003: 01
YM2 E002: 39
YM2 E003: 01
YM2 E002: 3D
YM2 E003: 01
YM2 E002: 51
YM2 E003: 14
YM2 E002: 55
YM2 E003: 14
YM2 E002: 59
YM2 E003: 0F
YM2 E002: 5D
YM2 E003: 0F
YM2 E002: 61
YM2 E003: 0D
YM2 E002: 65
YM2 E003: 00
YM2 E002: 69
YM2 E003: 0A
YM2 E002: 6D
YM2 E003: 0A
YM2 E002: 71
YM2 E003: 00
YM2 E002: 75
YM2 E003: 00
YM2 E002: 79
YM2 E003: 00
YM2 E002: 7D
YM2 E003: 00
YM2 E002: 81
YM2 E003: 13
YM2 E002: 85
YM2 E003: 13
YM2 E002: 89
YM2 E003: 38
YM2 E002: 8D
YM2 E003: 47
BT COMMAND AT 54DF (YM1) 00
BT COMMAND AT 54E0 (YM1) 08
BT COMMAND AT 54E1 (YM1) 73
YM2 E002: 41
YM2 E003: 0C
YM2 E002: 45
YM2 E003: 11
YM2 E002: 49
YM2 E003: 09
YM2 E002: 4D
YM2 E003: 03
YM2 E002: A5
YM2 E003: 23
YM2 E002: A1
YM2 E003: C9
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5502 (YM1) 00
BT COMMAND AT 5503 (YM1) 08
BT COMMAND AT 5504 (YM1) 9A
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 30
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 2A
YM2 E002: A2
YM2 E003: D6
YM2 E002: 28
YM2 E003: F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 368 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 777 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 712 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 490 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 646 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 563 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 585 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 627 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 514 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 684 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 461 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 754 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 388 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 813 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 334 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 879 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 272 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 944 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 998 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 145 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1069 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 88 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1130 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 10 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1217 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 28 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1117 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 01
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1026 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 996 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 937 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 864 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 340 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 811 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 409 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 749 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 474 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 528 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54E2 (YM1) 75
YM2 E002: 41
YM2 E003: 0C
YM2 E002: 45
YM2 E003: 11
YM2 E002: 49
YM2 E003: 09
YM2 E002: 4D
YM2 E003: 03
YM2 E002: A5
YM2 E003: 24
YM2 E002: A1
YM2 E003: 40
YM2 E002: 28
YM2 E003: F1
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 499 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 662 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 478 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 718 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 427 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 787 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 363 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 852 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 906 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 237 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 977 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 173 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1042 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 100 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1096 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 47 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1196 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 999 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 70 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1108 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1055 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 996 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 258 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 918 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 314 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 867 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 383 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM2 E002: 28
YM2 E003: 01

   (loops for 778 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 448 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 685 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 571 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 626 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 638 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 546 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 692 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 495 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 761 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 438 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 824 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 546A (YM1) 9C
YM1 E000: 40
YM1 E001: 20
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 2B
YM1 E000: A0
YM1 E001: 2F
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 5489 (YM1) 97
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: C6
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54A5 (YM1) 92
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 23
YM1 E000: A2
YM1 E001: 93
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54C4 (YM1) 93
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: C9
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54E3 (YM1) 96
YM2 E002: 41
YM2 E003: 0C
YM2 E002: 45
YM2 E003: 11
YM2 E002: 49
YM2 E003: 09
YM2 E002: 4D
YM2 E003: 03
YM2 E002: A5
YM2 E003: 24
YM2 E002: A1
YM2 E003: 81
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5505 (YM1) 9C
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 30
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 2B
YM2 E002: A2
YM2 E003: 2F
YM2 E002: 28
YM2 E003: F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 308 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 15 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1204 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 1150 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 34 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1109 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 106 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1034 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 162 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 983 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 231 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 924 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 296 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 846 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 348 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 795 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 419 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 738 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 482 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 658 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 538 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 607 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 607 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 548 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 672 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 468 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 728 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 417 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 797 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 358 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 862 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 280 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 916 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 227 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 987 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 170 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1050 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 90 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 37 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1177 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1216 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1144 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 15 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 1142 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 78 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1062 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1009 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 205 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 952 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 872 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 823 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 391 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 764 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 686 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 633 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 574 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 496 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 01
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 269 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 769 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 428 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 348 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 297 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 240 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 107 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 50 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1250 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1260 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 546B (YM1) 9A
YM1 E000: 40
YM1 E001: 20
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 2A
YM1 E000: A0
YM1 E001: D6
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 548A (YM1) 97
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: C6
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54A6 (YM1) 92
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 23
YM1 E000: A2
YM1 E001: 93
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54C5 (YM1) 93
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: C9
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54E4 (YM1) 07
BT COMMAND AT 54E5 (YM1) 0D
YM2 E002: B1
YM2 E003: 3A
YM2 E002: 31
YM2 E003: 01
YM2 E002: 35
YM2 E003: 01
YM2 E002: 39
YM2 E003: 01
YM2 E002: 3D
YM2 E003: 01
YM2 E002: 51
YM2 E003: 0E
YM2 E002: 55
YM2 E003: 0C
YM2 E002: 59
YM2 E003: 0D
YM2 E002: 5D
YM2 E003: 0F
YM2 E002: 61
YM2 E003: 07
YM2 E002: 65
YM2 E003: 00
YM2 E002: 69
YM2 E003: 07
YM2 E002: 6D
YM2 E003: 02
YM2 E002: 71
YM2 E003: 00
YM2 E002: 75
YM2 E003: 00
YM2 E002: 79
YM2 E003: 01
YM2 E002: 7D
YM2 E003: 00
YM2 E002: 81
YM2 E003: 05
YM2 E002: 85
YM2 E003: 04
YM2 E002: 89
YM2 E003: 05
YM2 E002: 8D
YM2 E003: 08
BT COMMAND AT 54E6 (YM1) 6E
YM2 E002: 41
YM2 E003: 21
YM2 E002: 45
YM2 E003: 1A
YM2 E002: 49
YM2 E003: 2E
YM2 E002: 4D
YM2 E003: 00
YM2 E002: A5
YM2 E003: 1A
YM2 E002: A1
YM2 E003: D6
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5506 (YM1) 9A
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 30
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 2A
YM2 E002: A2
YM2 E003: D6
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 734 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 239 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 916 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 304 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 836 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 360 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 785 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 429 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 726 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 494 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 648 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 546 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 597 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 540 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 680 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 460 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 409 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 805 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 350 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 270 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 219 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 160 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1060 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 82 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 29 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1178 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM2 E002: 28
YM2 E003: 01
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1116 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1140 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 74 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1066 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1009 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 211 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 936 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 883 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 338 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 810 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 54E7 (YM1) 70
YM2 E002: 41
YM2 E003: 21
YM2 E002: 45
YM2 E003: 1A
YM2 E002: 49
YM2 E003: 2E
YM2 E002: 4D
YM2 E003: 00
YM2 E002: A5
YM2 E003: 1B
YM2 E002: A1
YM2 E003: 2F
YM2 E002: 28
YM2 E003: F1
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 633 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 528 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 612 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 584 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 561 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 653 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 502 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 718 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 424 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 772 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 371 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 843 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 312 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 908 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 962 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 181 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1033 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 124 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1094 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 46 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1150 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1217 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1064 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1252 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1180 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 59 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1132 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1056 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1003 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 247 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 01
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 898 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 304 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 883 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 374 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 808 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 439 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 748 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 501 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 694 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 564 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 567 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 689 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 546C (YM1) 9C
YM1 E000: 40
YM1 E001: 20
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 2B
YM1 E000: A0
YM1 E001: 2F
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 548B (YM1) 97
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 24
YM1 E000: A1
YM1 E001: C6
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54A7 (YM1) 92
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 23
YM1 E000: A2
YM1 E001: 93
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54C6 (YM1) 93
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: C9
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54E8 (YM1) 91
YM2 E002: 41
YM2 E003: 21
YM2 E002: 45
YM2 E003: 1A
YM2 E002: 49
YM2 E003: 2E
YM2 E002: 4D
YM2 E003: 00
YM2 E002: A5
YM2 E003: 1B
YM2 E002: A1
YM2 E003: 60
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5507 (YM1) 9C
YM2 E002: 42
YM2 E003: 1A
YM2 E002: 46
YM2 E003: 30
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 2B
YM2 E002: A2
YM2 E003: 2F
YM2 E002: 28
YM2 E003: F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 306 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 140 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1067 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 87 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 8 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1215 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1216 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1182 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 26 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1119 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1060 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 160 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 980 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 216 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 929 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 285 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 870 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 348 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 794 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 402 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 741 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 473 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 684 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 536 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 604 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 592 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 551 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 663 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 494 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 726 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 414 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 363 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 851 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 304 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 916 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 226 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 970 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 173 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1041 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 116 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1104 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 36 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1215 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1218 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1216 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1210 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1208 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1134 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 2 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1143 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 69 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1080 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 122 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1014 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 955 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 259 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 882 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 831 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 383 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 769 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 446 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 694 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 643 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 571 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM1 E000: 28
YM1 E001: 00
YM1 E000: 28
YM1 E001: 01
YM1 E000: 28
YM1 E001: 02
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 01
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 403 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 636 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 548 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 692 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 495 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 761 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 433 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 824 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 358 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 882 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 305 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 951 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 243 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1014 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 170 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1070 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 117 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1139 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 55 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1202 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1252 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1262 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 546D (YM1) 00
BT COMMAND AT 546E (YM1) 09
BT COMMAND AT 546F (YM1) 22
BT COMMAND AT 5470 (YM1) DE
YM1 E000: 40
YM1 E001: 20
YM1 E000: 44
YM1 E001: 05
YM1 E000: 48
YM1 E001: 07
YM1 E000: 4C
YM1 E001: 07
YM1 E000: A4
YM1 E001: 2B
YM1 E000: A0
YM1 E001: 93
YM1 E000: 28
YM1 E001: F0
BT COMMAND AT 548C (YM1) 00
BT COMMAND AT 548D (YM1) 09
BT COMMAND AT 548E (YM1) 22
BT COMMAND AT 548F (YM1) D9
YM1 E000: 41
YM1 E001: 1F
YM1 E000: 45
YM1 E001: 05
YM1 E000: 49
YM1 E001: 07
YM1 E000: 4D
YM1 E001: 07
YM1 E000: A5
YM1 E001: 25
YM1 E000: A1
YM1 E001: 5B
YM1 E000: 28
YM1 E001: F1
BT COMMAND AT 54A8 (YM1) 00
BT COMMAND AT 54A9 (YM1) 09
BT COMMAND AT 54AA (YM1) 22
BT COMMAND AT 54AB (YM1) D6
YM1 E000: 42
YM1 E001: 1F
YM1 E000: 46
YM1 E001: 05
YM1 E000: 4A
YM1 E001: 07
YM1 E000: 4E
YM1 E001: 07
YM1 E000: A6
YM1 E001: 24
YM1 E000: A2
YM1 E001: 81
YM1 E000: 28
YM1 E001: F2
BT COMMAND AT 54C7 (YM1) 00
BT COMMAND AT 54C8 (YM1) 09
BT COMMAND AT 54C9 (YM1) B2
YM2 E002: 40
YM2 E003: 28
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54E9 (YM1) 00
BT COMMAND AT 54EA (YM1) 09
BT COMMAND AT 54EB (YM1) 21
BT COMMAND AT 54EC (YM1) D2
YM2 E002: 41
YM2 E003: 21
YM2 E002: 45
YM2 E003: 1A
YM2 E002: 49
YM2 E003: 2E
YM2 E002: 4D
YM2 E003: 00
YM2 E002: A5
YM2 E003: 1B
YM2 E002: A1
YM2 E003: 93
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5508 (YM1) 00
BT COMMAND AT 5509 (YM1) 09
BT COMMAND AT 550A (YM1) BE
YM2 E002: 42
YM2 E003: 1B
YM2 E002: 46
YM2 E003: 30
YM2 E002: 4A
YM2 E003: 1A
YM2 E002: 4E
YM2 E003: 00
YM2 E002: A6
YM2 E003: 2B
YM2 E002: A2
YM2 E003: 93
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1026 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 98 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1113 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1052 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 232 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 976 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 923 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 357 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 862 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 420 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 788 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 735 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 545 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 674 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 610 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 598 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 664 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 545 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 735 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 484 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 798 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 410 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 852 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 357 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 925 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 294 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 988 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 220 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1042 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 167 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1113 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 106 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1176 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 32 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1214 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 4 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1203 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 70 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1141 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 139 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1066 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 196 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1016 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 940 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 887 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 830 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 752 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 699 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 583 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 640 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 562 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 509 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 452 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 834 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 374 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 321 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 262 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 184 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 133 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1147 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 74 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1264 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1222 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1214 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 40 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1167 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1105 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 175 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1030 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 234 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 978 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 304 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 904 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 358 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 851 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 429 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 794 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 492 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 716 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 548 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 663 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 604 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 682 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 526 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 475 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 805 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 416 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 338 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 285 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 226 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1060 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 148 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 97 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1183 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 38 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1250 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1244 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1212 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1198 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 76 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1069 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 213 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 994 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 941 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 340 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 868 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 810 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 463 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 754 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 528 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 680 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 584 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 627 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 653 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 568 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 718 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 490 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 772 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 439 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 841 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 380 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 908 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 300 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 962 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 249 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1031 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 190 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1096 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1150 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 61 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1221 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1208 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1212 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 59 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1102 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1102 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1047 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 249 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 972 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 304 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 921 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 374 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 846 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 439 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 786 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 501 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 732 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 564 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 658 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 605 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 689 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 548 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 752 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 468 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 810 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 415 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 879 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 358 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 942 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 280 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 996 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 229 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1067 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 168 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 90 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 39 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1257 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1298 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1298 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1264 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1212 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 28 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1199 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1136 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 148 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1068 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1011 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 936 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 342 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
BT COMMAND AT 54CA (YM1) AD
YM2 E002: 40
YM2 E003: 27
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 15
YM2 E002: A0
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 550B (YM1) 07
BT COMMAND AT 550C (YM1) 07
YM2 E002: B2
YM2 E003: 06
YM2 E002: 32
YM2 E003: 7D
YM2 E002: 36
YM2 E003: 34
YM2 E002: 3A
YM2 E003: 32
YM2 E002: 3E
YM2 E003: 74
YM2 E002: 52
YM2 E003: 1F
YM2 E002: 56
YM2 E003: 1F
YM2 E002: 5A
YM2 E003: 1F
YM2 E002: 5E
YM2 E003: 1F
YM2 E002: 62
YM2 E003: 0D
YM2 E002: 66
YM2 E003: 0A
YM2 E002: 6A
YM2 E003: 0A
YM2 E002: 6E
YM2 E003: 0A
YM2 E002: 72
YM2 E003: 00
YM2 E002: 76
YM2 E003: 00
YM2 E002: 7A
YM2 E003: 00
YM2 E002: 7E
YM2 E003: 00
YM2 E002: 82
YM2 E003: F5
YM2 E002: 86
YM2 E003: F5
YM2 E002: 8A
YM2 E003: F5
YM2 E002: 8E
YM2 E003: F5
BT COMMAND AT 550D (YM1) AD
YM2 E002: 42
YM2 E003: 1B
YM2 E002: 46
YM2 E003: 07
YM2 E002: 4A
YM2 E003: 16
YM2 E002: 4E
YM2 E003: 0D
YM2 E002: A6
YM2 E003: 25
YM2 E002: A2
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 227 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 538 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 670 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 592 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 619 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 661 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 555 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 726 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 482 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 429 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 851 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 365 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 916 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 292 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 970 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 241 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1039 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 177 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1106 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 102 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1160 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 51 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1229 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1274 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 8 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1200 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1211 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 69 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1154 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1074 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 188 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1023 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 257 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 966 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 320 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 886 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 376 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 835 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 447 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 776 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 510 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 696 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 566 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 645 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 635 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 588 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 698 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 508 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 756 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 455 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 825 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 398 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 888 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 318 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 944 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 267 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1013 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 210 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1078 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 130 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 77 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1203 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 20 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1266 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1228 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1210 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 41 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1182 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 94 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1049 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 231 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 976 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 925 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 356 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 850 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 421 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 790 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 483 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 736 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 546 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 660 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 602 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 609 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 671 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 552 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 736 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 472 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 790 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 419 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 861 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 362 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 924 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 284 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 978 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 231 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1049 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 174 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1114 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 94 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 41 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1239 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1266 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1200 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 8 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1203 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 79 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1138 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 130 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1072 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 203 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1013 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 267 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 940 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 322 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 889 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 393 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 825 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 750 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 512 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 699 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 637 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 644 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 562 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 511 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 447 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 834 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 372 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 890 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 321 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 259 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1022 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 184 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1080 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 131 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 69 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1262 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1284 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1272 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1222 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1212 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 52 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1156 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1103 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 177 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1046 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 240 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 968 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 294 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 915 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 365 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 858 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 430 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 778 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 484 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 725 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 555 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 608 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 618 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 604 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 674 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 551 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 743 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 492 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 808 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 414 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 862 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 363 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 933 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 304 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 996 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 226 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1050 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 175 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1121 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 114 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1186 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 36 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1240 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1297 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1300 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1290 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1298 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1264 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1230 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 12 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1207 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 80 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1145 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1072 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1020 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 276 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 946 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 330 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 893 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 403 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 834 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 466 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 756 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 520 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 705 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 591 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 646 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 654 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 566 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 710 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 515 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 779 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 458 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 844 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 5471 (YM1) FE
BT COMMAND AT 5490 (YM1) F9
BT COMMAND AT 54AC (YM1) F6
BT COMMAND AT 54CB (YM1) 8F
YM2 E002: 40
YM2 E003: 27
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 1B
YM2 E002: A0
YM2 E003: 01
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54ED (YM1) D2
YM2 E002: 41
YM2 E003: 21
YM2 E002: 45
YM2 E003: 1A
YM2 E002: 49
YM2 E003: 2E
YM2 E002: 4D
YM2 E003: 00
YM2 E002: A5
YM2 E003: 1B
YM2 E002: A1
YM2 E003: 93
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 550E (YM1) 8F
YM2 E002: 42
YM2 E003: 1B
YM2 E002: 46
YM2 E003: 07
YM2 E002: 4A
YM2 E003: 16
YM2 E002: 4E
YM2 E003: 0D
YM2 E002: A6
YM2 E003: 2B
YM2 E002: A2
YM2 E003: 01
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 206 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 173 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1094 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 100 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 46 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC

   (loops for 1219 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1192 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1195 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 59 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1070 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 187 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1015 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 247 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 942 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 312 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 882 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 364 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 827 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 768 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 502 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 690 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 556 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 637 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 627 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 578 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 692 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 500 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 744 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 449 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 815 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 390 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 880 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 934 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 259 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1005 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 202 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1068 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 122 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1124 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 69 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 12 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1256 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1266 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1218 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1196 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 31 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1174 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 84 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1098 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 159 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1043 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 968 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 278 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 915 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 350 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 842 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 411 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 473 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 730 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 536 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 654 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 592 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 601 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 663 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 544 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 726 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 464 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 782 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 411 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 853 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 354 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 916 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 274 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 970 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 02
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 165 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1039 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 180 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1104 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 102 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1158 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 49 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1229 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1282 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1270 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1274 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1282 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1274 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1272 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1198 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 2 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1207 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 69 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 120 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 195 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1021 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 257 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
BT COMMAND AT 54CC (YM1) 06
BT COMMAND AT 54CD (YM1) AD
YM2 E002: 40
YM2 E003: 27
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 15
YM2 E002: A0
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 550F (YM1) 06
BT COMMAND AT 5510 (YM1) AD
YM2 E002: 42
YM2 E003: 1B
YM2 E002: 46
YM2 E003: 07
YM2 E002: 4A
YM2 E003: 16
YM2 E002: 4E
YM2 E003: 0D
YM2 E002: A6
YM2 E003: 25
YM2 E002: A2
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F2
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 757 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 447 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 746 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 2 instructions)

0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 687 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 571 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 629 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 636 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 558 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 688 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 503 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 761 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 439 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 826 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 366 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 880 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 313 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 951 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 249 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1014 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 178 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1068 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 125 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1139 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 61 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1204 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1266 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1214 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1194 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 44 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1148 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 98 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1095 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1040 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 960 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 286 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 907 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 357 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 850 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 420 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 770 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 476 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 717 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 547 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 660 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 610 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 580 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 664 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 531 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 733 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 472 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 798 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 392 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 854 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 341 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 923 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 282 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 988 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 202 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1044 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 151 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1113 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 92 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1176 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 16 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1230 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1267 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1254 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1254 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1242 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1198 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 4 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1187 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 70 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1123 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 141 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1050 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 196 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 998 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 922 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 324 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 871 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 391 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 814 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 456 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 734 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 512 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 683 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 581 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 624 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 646 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 546 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 493 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 771 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 434 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 836 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 356 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 888 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 305 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 959 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 246 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1024 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 168 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1078 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 115 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1149 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 58 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1212 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1254 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1204 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1200 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 38 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1151 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1087 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 177 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1014 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 232 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 962 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 304 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 888 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 358 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 835 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 429 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 776 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 492 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 700 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 546 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 647 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 617 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 588 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 682 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 510 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 736 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 457 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 807 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 400 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 870 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 320 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 926 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 267 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 995 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 212 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1058 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 132 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1114 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 79 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 22 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1248 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1228 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1196 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 23 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1182 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 76 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1106 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 151 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1051 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 211 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 978 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 927 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 338 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 852 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 401 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 792 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 465 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 738 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 528 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 662 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 584 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 609 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 655 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 552 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 716 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 474 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 772 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 423 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 841 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 364 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 906 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 284 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 962 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 233 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1031 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 174 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1096 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 94 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1152 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 43 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1219 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1268 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1266 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1256 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1260 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1266 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1192 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1196 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 59 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 1146 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 112 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti

   (loops for 1072 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 185 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1015 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 249 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 940 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 306 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 889 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 374 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 816 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 437 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 756 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 501 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 702 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 564 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 626 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 620 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 575 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 689 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 516 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 754 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 436 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 810 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 385 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 877 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 328 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 942 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 248 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 998 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 197 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1067 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 138 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1132 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 60 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1186 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 7 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1257 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 01
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1236 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1264 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1266 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1274 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1262 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1238 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 6 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1190 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 26 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1177 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 95 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti

   (loops for 1112 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 146 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1046 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 221 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 987 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 283 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 912 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z
0058: ei
0059: reti

   (loops for 342 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 859 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 411 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 797 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 476 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
YM2 E002: 28
YM2 E003: 00
YM2 E002: 28
YM2 E003: 02
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 662 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 530 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 685 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 601 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 621 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 664 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 548 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 720 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 497 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 787 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 435 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 852 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 360 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 906 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 309 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 977 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 245 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1040 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 4 instructions)

0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 172 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti

   (loops for 1096 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 119 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1167 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 55 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1230 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1278 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1280 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1288 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1278 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1280 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1288 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1268 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1215 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1216 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 70 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1142 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 126 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 1091 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 193 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 1034 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 258 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 954 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 312 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 903 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 383 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 844 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 446 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 766 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 502 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 713 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 573 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 654 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 636 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 576 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 692 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 523 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 761 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 466 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 826 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 386 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 880 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 335 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 951 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 276 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1016 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 196 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1070 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058

   (loops for 145 instructions)

0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1141 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 88 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1202 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 10 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1258 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC

   (loops for 1287 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1290 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1280 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 5 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 1290 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret

   (loops for 1 instructions)

039F: ld   hl,$C013
03A2: inc  (hl)
03A3: ld   ix,$C100
03A7: call $03B9
03AA: ld   a,($C011)
03AD: bit  6,a
03AF: ret  z
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0009: ei
000A: jr   $0009
0009: ei
000A: jr   $0009

   (loops for 1276 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti

   (loops for 1236 instructions)

0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052

   (loops for 1 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 7 instructions)

0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F
0044: call $0A50
0047: call $039F

   (loops for 1220 instructions)

0136: ld   bc,$E000
0139: ld   a,$26
013B: ld   d,$F4
013D: call $0153
YM1 E000: 26
YM1 E001: F4
0140: ld   d,$0F
0142: set  5,d
0144: ld   a,$27
0146: call $0153
YM1 E000: 27
YM1 E001: 2F
0149: ret

   (loops for 1 instructions)

01FC: ld   a,($C001)
01FF: ld   c,a
0200: ld   a,($C800)
0203: ld   ($C000),a
0206: cp   c
0207: ret  z

   (loops for 42 instructions)

011B: ld   bc,$E000
011E: ld   a,$24
0120: ld   d,$CE
0122: call $0153
YM1 E000: 24
YM1 E001: CE
0125: ld   a,$25
0127: ld   d,$01
0129: call $0153
YM1 E000: 25
YM1 E001: 01
012C: ld   d,$0F
012E: set  4,d
0130: ld   a,$27
0132: call $0153
YM1 E000: 27
YM1 E001: 1F
0135: ret

   (loops for 1 instructions)

0A50: ld   hl,$C022
0A53: inc  (hl)
0A54: ld   ix,$C500
0A58: ld   iy,$E000
0A5C: ld   a,(ix+$00)
0A5F: or   a
0A60: call nz,$0A7F
0A63: ld   a,(ix+$1f)
0A66: ld   ($C020),a
0A69: ld   ix,$C530
0A6D: ld   iy,$E002
0A71: ld   a,(ix+$00)
0A74: or   a
0A75: call nz,$0A7F
0A78: ld   a,(ix+$1f)
0A7B: ld   ($C021),a
0A7E: ret
0047: call $039F
BT COMMAND AT 54CE (YM1) E6
YM2 E002: 40
YM2 E003: 26
YM2 E002: 44
YM2 E003: 1B
YM2 E002: 48
YM2 E003: 1B
YM2 E002: 4C
YM2 E003: 07
YM2 E002: A4
YM2 E003: 13
YM2 E002: A0
YM2 E003: 93
YM2 E002: 28
YM2 E003: F0
BT COMMAND AT 54EE (YM1) F9
YM2 E002: 41
YM2 E003: 21
YM2 E002: 45
YM2 E003: 1A
YM2 E002: 49
YM2 E003: 2E
YM2 E002: 4D
YM2 E003: 00
YM2 E002: A5
YM2 E003: 1D
YM2 E002: A1
YM2 E003: 5B
YM2 E002: 28
YM2 E003: F1
BT COMMAND AT 5511 (YM1) E6
YM2 E002: 42
YM2 E003: 1B
YM2 E002: 46
YM2 E003: 09
YM2 E002: 4A
YM2 E003: 16
YM2 E002: 4E
YM2 E003: 0D
YM2 E002: A6
YM2 E003: 23
YM2 E002: A2
YM2 E003: 93
YM2 E002: 28
YM2 E003: F2
004A: ld   bc,$E000
004D: ld   a,(bc)
004E: bit  1,a
0050: jr   z,$0058
0052: call $0136
YM1 E000: 26
YM1 E001: F4
YM1 E000: 27
YM1 E001: 2F
0055: call $01FC
0058: ei
0059: reti
0038: di
0039: ld   bc,$E000
003C: ld   a,(bc)
003D: bit  0,a
003F: jr   z,$0052
0041: call $011B
YM1 E000: 24
YM1 E001: CE
YM1 E000: 25
YM1 E001: 01
YM1 E000: 27
YM1 E001: 1F

